CLASS ltcl_json_writer DEFINITION FINAL FOR TESTING
  DURATION SHORT
  RISK LEVEL HARMLESS.

  PRIVATE SECTION.
    CONSTANTS:
      schema_id TYPE string VALUE 'schema/id.json'.

    DATA:
      cut            TYPE REF TO zcl_aff_writer_json_schema,
      test_generator TYPE REF TO zif_aff_generator.

    METHODS: use_ddic_info_for_element FOR TESTING RAISING cx_static_check,
      date_time_element FOR TESTING RAISING cx_static_check,
      structure_in_table FOR TESTING RAISING cx_static_check,
      nested_table FOR TESTING RAISING cx_static_check,
      use_ddic_info_for_max_length FOR TESTING RAISING cx_static_check,
      max_length FOR TESTING RAISING cx_static_check,
      number_max_value FOR TESTING RAISING cx_static_check,
      enum_element FOR TESTING RAISING cx_static_check,
      date_time_from_abap_to_json FOR TESTING RAISING cx_static_check,
      validate_invalid_json_schema FOR TESTING RAISING cx_static_check,
      validate_valid_json_schema FOR TESTING RAISING cx_static_check,
      nested_boolean FOR TESTING RAISING cx_static_check,
      nested_table_w_same_field_name FOR TESTING RAISING cx_static_check,
      multiple_of_warning FOR TESTING RAISING cx_static_check,
      setup.

ENDCLASS.

CLASS zcl_aff_writer_json_schema DEFINITION LOCAL FRIENDS ltcl_json_writer.

CLASS ltcl_json_writer IMPLEMENTATION.

  METHOD setup.
    CREATE OBJECT cut TYPE zcl_aff_writer_json_schema EXPORTING SCHEMA_ID = schema_id.
    CREATE OBJECT test_generator TYPE zcl_aff_generator EXPORTING WRITER = cut.
  ENDMETHOD.

  METHOD enum_element.
*  base type / base structure/ ohne (integer)
*  ABAP enums are not supported and hence treated as string with maxLength 30
    TYPES category TYPE string.
    CONSTANTS: BEGIN OF undefined,
             general TYPE category VALUE '1',
             classic_badi TYPE category VALUE '2',
           END OF undefined.

    DATA temp45 TYPE category.
    DATA act_schema TYPE string_table.
    DATA temp46 TYPE string_table.
    DATA temp30 LIKE LINE OF temp46.
    DATA temp31 LIKE LINE OF temp46.
    DATA temp32 LIKE LINE OF temp46.
    DATA temp47 LIKE LINE OF temp46.
    DATA exp_schema LIKE temp46.
    CLEAR temp45.

    act_schema = test_generator->generate_type( temp45 ).


    CLEAR temp46.
    INSERT `{` INTO TABLE temp46.

    temp30 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp30 INTO TABLE temp46.

    temp31 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp31 INTO TABLE temp46.

    temp32 = |    "$id": "{ schema_id }",|.
    INSERT temp32 INTO TABLE temp46.
    INSERT `    "type": "string",` INTO TABLE temp46.
    INSERT `    "maxLength": 30` INTO TABLE temp46.
    INSERT `}` INTO TABLE temp46.

    INSERT temp47 INTO TABLE temp46.

    exp_schema = temp46.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD date_time_element.
    DATA temp48 TYPE d.
    DATA act_schema TYPE string_table.
    DATA temp49 TYPE string_table.
    DATA temp33 LIKE LINE OF temp49.
    DATA temp34 LIKE LINE OF temp49.
    DATA temp35 LIKE LINE OF temp49.
    DATA temp50 LIKE LINE OF temp49.
    DATA exp_schema LIKE temp49.
    CLEAR temp48.

    act_schema = test_generator->generate_type( temp48 ).


    CLEAR temp49.
    INSERT `{` INTO TABLE temp49.

    temp33 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp33 INTO TABLE temp49.

    temp34 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp34 INTO TABLE temp49.

    temp35 = |    "$id": "{ schema_id }",|.
    INSERT temp35 INTO TABLE temp49.
    INSERT `    "type": "string",` INTO TABLE temp49.
    INSERT `    "format" :"date-time"` INTO TABLE temp49.
    INSERT `}` INTO TABLE temp49.

    INSERT temp50 INTO TABLE temp49.

    exp_schema = temp49.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD use_ddic_info_for_element.
    DATA temp51 TYPE abap_language_version.
    DATA act_schema TYPE string_table.
    DATA temp52 TYPE string_table.
    DATA temp36 LIKE LINE OF temp52.
    DATA temp37 LIKE LINE OF temp52.
    DATA temp38 LIKE LINE OF temp52.
    DATA temp53 LIKE LINE OF temp52.
    DATA exp_schema LIKE temp52.
    CLEAR temp51.

    act_schema = test_generator->generate_type( temp51 ).


    CLEAR temp52.
    INSERT `{` INTO TABLE temp52.

    temp36 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp36 INTO TABLE temp52.

    temp37 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp37 INTO TABLE temp52.

    temp38 = |    "$id": "{ schema_id }",|.
    INSERT temp38 INTO TABLE temp52.
    INSERT `    "description": "ABAP Language Version",` INTO TABLE temp52.
    INSERT `    "type": "string",` INTO TABLE temp52.
    INSERT `    "enum": [` INTO TABLE temp52.
    INSERT `      "standardAbap",` INTO TABLE temp52.
    INSERT `      "abapForKeyUsers",` INTO TABLE temp52.
    INSERT `      "abapForCloudDevelopment"` INTO TABLE temp52.
    INSERT `    ],` INTO TABLE temp52.
    INSERT `    "enumDescriptions": [` INTO TABLE temp52.
    INSERT `      "StandardABAP",` INTO TABLE temp52.
    INSERT `      "ABAP for Key Users",` INTO TABLE temp52.
    INSERT `      "ABAP for Cloud Development"` INTO TABLE temp52.
    INSERT `    ]` INTO TABLE temp52.
    INSERT `}` INTO TABLE temp52.

    INSERT temp53 INTO TABLE temp52.

    exp_schema = temp52.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD use_ddic_info_for_max_length.
    DATA temp54 TYPE sysuuid_c36.
    DATA act_schema TYPE string_table.
    DATA temp55 TYPE string_table.
    DATA temp39 LIKE LINE OF temp55.
    DATA temp40 LIKE LINE OF temp55.
    DATA temp41 LIKE LINE OF temp55.
    DATA temp56 LIKE LINE OF temp55.
    DATA exp_schema LIKE temp55.
    CLEAR temp54.

    act_schema = test_generator->generate_type( temp54 ).


    CLEAR temp55.
    INSERT `{` INTO TABLE temp55.

    temp39 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp39 INTO TABLE temp55.

    temp40 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp40 INTO TABLE temp55.

    temp41 = |    "$id": "{ schema_id }",|.
    INSERT temp41 INTO TABLE temp55.
    INSERT `    "description": "16 byte UUID in 36 chars according to RFC4122",` INTO TABLE temp55.
    INSERT `    "type": "string",` INTO TABLE temp55.
    INSERT `    "maxLength": 36` INTO TABLE temp55.
    INSERT `}` INTO TABLE temp55.

    INSERT temp56 INTO TABLE temp55.

    exp_schema = temp55.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD structure_in_table.
    TYPES:
      BEGIN OF my_structure,
        my_element TYPE string,
      END OF my_structure,
      my_table TYPE STANDARD TABLE OF my_structure WITH DEFAULT KEY.

    DATA temp57 TYPE my_table.
    DATA act_schema TYPE string_table.
    DATA temp58 TYPE string_table.
    DATA temp42 LIKE LINE OF temp58.
    DATA temp43 LIKE LINE OF temp58.
    DATA temp44 LIKE LINE OF temp58.
    DATA temp59 LIKE LINE OF temp58.
    DATA exp_schema LIKE temp58.
    CLEAR temp57.

    act_schema = test_generator->generate_type( temp57 ).


    CLEAR temp58.
    INSERT `{` INTO TABLE temp58.

    temp42 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp42 INTO TABLE temp58.

    temp43 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp43 INTO TABLE temp58.

    temp44 = |    "$id": "{ schema_id }",|.
    INSERT temp44 INTO TABLE temp58.
    INSERT `    "type": "array",` INTO TABLE temp58.
    INSERT `    "items": {` INTO TABLE temp58.
    INSERT `        "type": "object",` INTO TABLE temp58.
    INSERT `        "properties": {` INTO TABLE temp58.
    INSERT `            "myElement": {` INTO TABLE temp58.
    INSERT `                "type": "string"` INTO TABLE temp58.
    INSERT `            }` INTO TABLE temp58.
    INSERT `        },` INTO TABLE temp58.
    INSERT `        "additionalProperties": false` INTO TABLE temp58.
    INSERT `    }` INTO TABLE temp58.
    INSERT `}` INTO TABLE temp58.

    INSERT temp59 INTO TABLE temp58.

    exp_schema = temp58.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD nested_boolean.
    TYPES:
      BEGIN OF ty_personalization,
        hide_column TYPE abap_bool,
      END OF ty_personalization,
      BEGIN OF ty_list_report,
        hide_column TYPE ty_personalization-hide_column,
      END OF ty_list_report.

    DATA temp60 TYPE ty_list_report.
    DATA act_schema TYPE string_table.
    DATA temp61 TYPE string_table.
    DATA temp45 LIKE LINE OF temp61.
    DATA temp46 LIKE LINE OF temp61.
    DATA temp47 LIKE LINE OF temp61.
    DATA temp62 LIKE LINE OF temp61.
    DATA exp_schema LIKE temp61.
    CLEAR temp60.

    act_schema = test_generator->generate_type( temp60 ).


    CLEAR temp61.
    INSERT `{` INTO TABLE temp61.

    temp45 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp45 INTO TABLE temp61.

    temp46 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp46 INTO TABLE temp61.

    temp47 = |    "$id": "{ schema_id }",|.
    INSERT temp47 INTO TABLE temp61.
    INSERT `    "type": "object",` INTO TABLE temp61.
    INSERT `    "properties": {` INTO TABLE temp61.
    INSERT `        "hideColumn": {` INTO TABLE temp61.
    INSERT `            "type": "boolean"` INTO TABLE temp61.
    INSERT `        }` INTO TABLE temp61.
    INSERT `    },` INTO TABLE temp61.
    INSERT `    "additionalProperties": false` INTO TABLE temp61.
    INSERT `}` INTO TABLE temp61.

    INSERT temp62 INTO TABLE temp61.

    exp_schema = temp61.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD nested_table.
    TYPES:
      nested_table TYPE STANDARD TABLE OF string WITH DEFAULT KEY,
      first_table  TYPE STANDARD TABLE OF nested_table WITH DEFAULT KEY.

    DATA temp63 TYPE first_table.
    DATA act_schema TYPE string_table.
    DATA temp64 TYPE string_table.
    DATA temp48 LIKE LINE OF temp64.
    DATA temp49 LIKE LINE OF temp64.
    DATA temp50 LIKE LINE OF temp64.
    DATA temp65 LIKE LINE OF temp64.
    DATA exp_schema LIKE temp64.
    CLEAR temp63.

    act_schema = test_generator->generate_type( temp63 ).


    CLEAR temp64.
    INSERT `{` INTO TABLE temp64.

    temp48 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp48 INTO TABLE temp64.

    temp49 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp49 INTO TABLE temp64.

    temp50 = |    "$id": "{ schema_id }",|.
    INSERT temp50 INTO TABLE temp64.
    INSERT `    "type": "array",` INTO TABLE temp64.
    INSERT `    "items": {` INTO TABLE temp64.
    INSERT `        "type": "array",` INTO TABLE temp64.
    INSERT `        "items": {` INTO TABLE temp64.
    INSERT `            "type": "string"` INTO TABLE temp64.
    INSERT `        }` INTO TABLE temp64.
    INSERT `    }` INTO TABLE temp64.
    INSERT `}` INTO TABLE temp64.

    INSERT temp65 INTO TABLE temp64.

    exp_schema = temp64.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD nested_table_w_same_field_name.
    TYPES:
      BEGIN OF ty_nested,
        field_name TYPE STANDARD TABLE OF string WITH DEFAULT KEY,
      END OF ty_nested.
    TYPES:
      BEGIN OF ty_main,
        field_name TYPE STANDARD TABLE OF ty_nested WITH DEFAULT KEY,
      END OF ty_main.

    DATA temp66 TYPE ty_main.
    DATA act_schema TYPE string_table.
    DATA temp67 TYPE string_table.
    DATA exp_schema LIKE temp67.
    CLEAR temp66.

    act_schema = test_generator->generate_type( temp66 ).


    CLEAR temp67.
    INSERT `{` INTO TABLE temp67.
    INSERT `  "$comment": "This file is autogenerated, do not edit manually, see https://github.com/SAP/abap-file-formats for more information.",` INTO TABLE temp67.
    INSERT `  "$schema": "https://json-schema.org/draft/2020-12/schema",` INTO TABLE temp67.
    INSERT `  "$id": "schema/id.json",` INTO TABLE temp67.
    INSERT `  "type": "object",` INTO TABLE temp67.
    INSERT `  "properties": {` INTO TABLE temp67.
    INSERT `    "fieldName": {` INTO TABLE temp67.
    INSERT `      "type": "array",` INTO TABLE temp67.
    INSERT `      "items": {` INTO TABLE temp67.
    INSERT `        "type": "object",` INTO TABLE temp67.
    INSERT `        "properties": {` INTO TABLE temp67.
    INSERT `          "fieldName": {` INTO TABLE temp67.
    INSERT `            "type": "array",` INTO TABLE temp67.
    INSERT `            "items": {` INTO TABLE temp67.
    INSERT `              "type": "string"` INTO TABLE temp67.
    INSERT `            }` INTO TABLE temp67.
    INSERT `          }` INTO TABLE temp67.
    INSERT `        },` INTO TABLE temp67.
    INSERT `        "additionalProperties": false` INTO TABLE temp67.
    INSERT `      }` INTO TABLE temp67.
    INSERT `    }` INTO TABLE temp67.
    INSERT `  },` INTO TABLE temp67.
    INSERT `  "additionalProperties": false` INTO TABLE temp67.
    INSERT `}` INTO TABLE temp67.
    INSERT `` INTO TABLE temp67.

    exp_schema = temp67.

    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD max_length.
    TYPES:
      BEGIN OF component_description,
        name         TYPE c LENGTH 30,
        description  TYPE c LENGTH 60,
        numeric_text TYPE n LENGTH 10,
      END OF component_description.
    DATA temp69 TYPE component_description.
    DATA act_schema TYPE string_table.
    DATA temp70 TYPE string_table.
    DATA temp51 LIKE LINE OF temp70.
    DATA temp52 LIKE LINE OF temp70.
    DATA temp53 LIKE LINE OF temp70.
    DATA temp71 LIKE LINE OF temp70.
    DATA exp_schema LIKE temp70.
    CLEAR temp69.

    act_schema = test_generator->generate_type( temp69 ).


    CLEAR temp70.
    INSERT `{` INTO TABLE temp70.

    temp51 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp51 INTO TABLE temp70.

    temp52 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp52 INTO TABLE temp70.

    temp53 = |    "$id": "{ schema_id }",|.
    INSERT temp53 INTO TABLE temp70.
    INSERT `    "type": "object",` INTO TABLE temp70.
    INSERT `    "properties": {` INTO TABLE temp70.
    INSERT `        "name": {` INTO TABLE temp70.
    INSERT `            "type": "string",` INTO TABLE temp70.
    INSERT `            "maxLength": 30` INTO TABLE temp70.
    INSERT `        },` INTO TABLE temp70.
    INSERT `        "description": {` INTO TABLE temp70.
    INSERT `            "type": "string",` INTO TABLE temp70.
    INSERT `            "maxLength": 60` INTO TABLE temp70.
    INSERT `        },` INTO TABLE temp70.
    INSERT `        "numericText": {` INTO TABLE temp70.
    INSERT `            "type": "string",` INTO TABLE temp70.
    INSERT `            "maxLength": 10,` INTO TABLE temp70.
    INSERT `            "pattern": "^[0-9]+$" ` INTO TABLE temp70.
    INSERT `        }` INTO TABLE temp70.
    INSERT `    },` INTO TABLE temp70.
    INSERT `    "additionalProperties": false` INTO TABLE temp70.
    INSERT `}` INTO TABLE temp70.

    INSERT temp71 INTO TABLE temp70.

    exp_schema = temp70.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD number_max_value.
    TYPES:
      BEGIN OF component_description,
        integer    TYPE i, "-2147483648 to +2147483647 for i
        integer8   TYPE int8, "-9,223,372,036,854,775,808 to +9,223,372,036,854,775,807 for int8
        decfloat16 TYPE decfloat16, "1E385(1E-16 - 1) to -1E-383, 0, +1E-383 to 1E385(1 - 1E-16) for decfloat16
        decfloat34 TYPE decfloat34, "1E6145(1E-34 - 1) to -1E-6143, 0, +1E-6143 to 1E6145(1 - 1E-34) for decfloat34
        ftype      TYPE f, "2.2250738585072014E-308 to 1.7976931348623157E+308, positive as well as negative
        packed     TYPE p LENGTH 14 DECIMALS 2, "length multiplied by 2 minus 1 digits and can have a maximum of 14 decimal places
        integer2   TYPE int2,
      END OF component_description.
    DATA temp72 TYPE component_description.
    DATA act_schema TYPE string_table.
    DATA temp73 TYPE string_table.
    DATA temp54 LIKE LINE OF temp73.
    DATA temp55 LIKE LINE OF temp73.
    DATA temp56 LIKE LINE OF temp73.
    DATA temp74 LIKE LINE OF temp73.
    DATA exp_schema LIKE temp73.
    CLEAR temp72.

    act_schema = test_generator->generate_type( temp72 ).



    CLEAR temp73.
    INSERT `{` INTO TABLE temp73.

    temp54 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp54 INTO TABLE temp73.

    temp55 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp55 INTO TABLE temp73.

    temp56 = |    "$id": "{ schema_id }",|.
    INSERT temp56 INTO TABLE temp73.
    INSERT `    "type": "object",` INTO TABLE temp73.
    INSERT `    "properties": {` INTO TABLE temp73.
    INSERT `        "integer": {` INTO TABLE temp73.
    INSERT `            "type": "integer",` INTO TABLE temp73.
    INSERT `            "minimum": -2147483648,` INTO TABLE temp73.
    INSERT `            "maximum": 2147483647` INTO TABLE temp73.
    INSERT `        },` INTO TABLE temp73.
    INSERT `        "integer8": {` INTO TABLE temp73.
    INSERT `            "type": "integer",` INTO TABLE temp73.
    INSERT `            "minimum": -9223372036854775808,` INTO TABLE temp73.
    INSERT `            "maximum": 9223372036854775807` INTO TABLE temp73.
    INSERT `        },` INTO TABLE temp73.
    INSERT `        "decfloat16": {` INTO TABLE temp73.
    INSERT `            "type": "number",` INTO TABLE temp73.
    INSERT `            "minimum": -9.999999999999999e384,` INTO TABLE temp73.
    INSERT `            "maximum": 9.999999999999999e384` INTO TABLE temp73.
    INSERT `        },` INTO TABLE temp73.
    INSERT `        "decfloat34": {` INTO TABLE temp73.
    INSERT `            "type": "number",` INTO TABLE temp73.
    INSERT `            "minimum": -9.999999999999999999999999999999999e6144,` INTO TABLE temp73.
    INSERT `            "maximum": 9.999999999999999999999999999999999e6144` INTO TABLE temp73.
    INSERT `        },` INTO TABLE temp73.
    INSERT `        "ftype": {` INTO TABLE temp73.
    INSERT `            "type": "number",` INTO TABLE temp73.
    INSERT `            "minimum": -1.7976931348623157e308,` INTO TABLE temp73.
    INSERT `            "maximum": 1.7976931348623157e308` INTO TABLE temp73.
    INSERT `        },` INTO TABLE temp73.
    INSERT `        "packed": {` INTO TABLE temp73.
    INSERT `            "type": "number",` INTO TABLE temp73.
    INSERT `            "minimum": -9999999999999999999999999.99,` INTO TABLE temp73.
    INSERT `            "maximum": 9999999999999999999999999.99` INTO TABLE temp73.
    INSERT `        },` INTO TABLE temp73.
    INSERT `        "integer2": {` INTO TABLE temp73.
    INSERT `            "description": "2ByteSignedInteger",` INTO TABLE temp73.
    INSERT `            "type": "integer",` INTO TABLE temp73.
    INSERT `            "minimum": -32768,` INTO TABLE temp73.
    INSERT `            "maximum": 32767` INTO TABLE temp73.
    INSERT `        }` INTO TABLE temp73.
    INSERT `    },` INTO TABLE temp73.
    INSERT `    "additionalProperties": false` INTO TABLE temp73.
    INSERT `}` INTO TABLE temp73.

    INSERT temp74 INTO TABLE temp73.

    exp_schema = temp73.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.


  METHOD date_time_from_abap_to_json.
    DATA abap_date TYPE string.
    DATA temp75 TYPE d.
    DATA temp57 TYPE REF TO cl_abap_elemdescr.
    DATA element_description LIKE temp57.
    DATA exp_json TYPE string.
    DATA act_json TYPE string.
    DATA abap_date_year TYPE string.
    DATA abap_date_year_month TYPE string.
    DATA abap_time TYPE string.
    DATA temp76 TYPE t.
    DATA temp58 TYPE REF TO cl_abap_elemdescr.
    DATA abap_time_incomplete TYPE string.
    DATA abap_utclong TYPE string.
    DATA temp77 TYPE utclong.
    DATA temp59 TYPE REF TO cl_abap_elemdescr.
    abap_date = `"20121221"`.

    CLEAR temp75.

    temp57 ?= cl_abap_typedescr=>describe_by_data( temp75 ).

    element_description = temp57.

    exp_json = `2012-12-21`.

    act_json = cut->date_time_from_abap_to_json(
      date_time_abap      = abap_date
      element_description = element_description ).
    cl_abap_unit_assert=>assert_equals( exp = exp_json act = act_json ).


    abap_date_year = `"2012"`.
    exp_json = `2012`.
    act_json = cut->date_time_from_abap_to_json(
      date_time_abap      = abap_date_year
      element_description = element_description ).
    cl_abap_unit_assert=>assert_equals( exp = exp_json act = act_json ).


    abap_date_year_month = `"201212"`.
    exp_json = `2012-12`.
    act_json = cut->date_time_from_abap_to_json(
      date_time_abap      = abap_date_year_month
      element_description = element_description ).
    cl_abap_unit_assert=>assert_equals( exp = exp_json act = act_json ).


    abap_time = `"201500"`.

    CLEAR temp76.

    temp58 ?= cl_abap_typedescr=>describe_by_data( temp76 ).
    element_description = temp58.
    exp_json = `20:15:00`.
    act_json = cut->date_time_from_abap_to_json(
      date_time_abap      = abap_time
      element_description = element_description ).
    cl_abap_unit_assert=>assert_equals( exp = exp_json act = act_json ).


    abap_time_incomplete = `"2015"`.
    act_json = cut->date_time_from_abap_to_json(
      date_time_abap      = abap_time_incomplete
      element_description = element_description ).
    cl_abap_unit_assert=>assert_equals( exp = exp_json act = act_json ).


    abap_utclong = `"2012-12-21T23:59:59.9999999"`.

    CLEAR temp77.

    temp59 ?= cl_abap_typedescr=>describe_by_data( temp77 ).
    element_description = temp59.
    exp_json = `2012-12-21T23:59:59+00:00`.
    act_json = cut->date_time_from_abap_to_json(
      date_time_abap      = abap_utclong
      element_description = element_description ).
    cl_abap_unit_assert=>assert_equals( exp = exp_json act = act_json ).
  ENDMETHOD.

  METHOD validate_invalid_json_schema.
    DATA temp78 TYPE string_table.
    DATA temp60 LIKE LINE OF temp78.
    DATA temp61 LIKE LINE OF temp78.
    DATA temp62 LIKE LINE OF temp78.
    DATA invalid_json_schema LIKE temp78.
    DATA log TYPE REF TO zif_aff_log.
    DATA is_valid TYPE abap_bool.
    CLEAR temp78.
    INSERT `{` INTO TABLE temp78.

    temp60 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp60 INTO TABLE temp78.

    temp61 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp61 INTO TABLE temp78.

    temp62 = |    "$id": "{ schema_id }",|.
    INSERT temp62 INTO TABLE temp78.
    INSERT `    "type": "object",` INTO TABLE temp78.
    INSERT `    "properties": {` INTO TABLE temp78.
    INSERT `        "name": {` INTO TABLE temp78.
    INSERT `            "type": "string",` INTO TABLE temp78.
    INSERT `            "maxLength": 30` INTO TABLE temp78.
    INSERT `        }` INTO TABLE temp78.
    INSERT `        "description": {` INTO TABLE temp78.
    INSERT `            "type": "string",` INTO TABLE temp78.
    INSERT `            "maxLength": 60` INTO TABLE temp78.
    INSERT `        }` INTO TABLE temp78.
    INSERT `    }` INTO TABLE temp78.
    INSERT `}` INTO TABLE temp78.

    invalid_json_schema = temp78.


    log = cut->zif_aff_writer~get_log( ).

    is_valid = cut->zif_aff_writer~validate( source = invalid_json_schema log = log ).

    cl_abap_unit_assert=>assert_false( is_valid ).
    cl_abap_unit_assert=>assert_true( log->has_messages( ) ).
  ENDMETHOD.

  METHOD validate_valid_json_schema.
    DATA temp80 TYPE string_table.
    DATA temp63 LIKE LINE OF temp80.
    DATA temp64 LIKE LINE OF temp80.
    DATA temp65 LIKE LINE OF temp80.
    DATA invalid_json_schema LIKE temp80.
    DATA log TYPE REF TO zif_aff_log.
    DATA is_valid TYPE abap_bool.
    CLEAR temp80.
    INSERT `{` INTO TABLE temp80.

    temp63 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp63 INTO TABLE temp80.

    temp64 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp64 INTO TABLE temp80.

    temp65 = |    "$id": "{ schema_id }",|.
    INSERT temp65 INTO TABLE temp80.
    INSERT `    "type": "object",` INTO TABLE temp80.
    INSERT `    "properties": {` INTO TABLE temp80.
    INSERT `        "name": {` INTO TABLE temp80.
    INSERT `            "type": "string",` INTO TABLE temp80.
    INSERT `            "maxLength": 30` INTO TABLE temp80.
    INSERT `        },` INTO TABLE temp80.
    INSERT `        "description": {` INTO TABLE temp80.
    INSERT `            "type": "string",` INTO TABLE temp80.
    INSERT `            "maxLength": 60` INTO TABLE temp80.
    INSERT `        }` INTO TABLE temp80.
    INSERT `    }` INTO TABLE temp80.
    INSERT `}` INTO TABLE temp80.

    invalid_json_schema = temp80.


    log = cut->zif_aff_writer~get_log( ).

    is_valid = cut->zif_aff_writer~validate( source = invalid_json_schema log = log ).

    cl_abap_unit_assert=>assert_true( is_valid ).
    cl_abap_unit_assert=>assert_false( log->has_messages( ) ).
  ENDMETHOD.

  METHOD multiple_of_warning.
    DATA temp82 TYPE zcl_aff_test_types=>structure_multiple_of_warning.
    DATA act_schema_co TYPE string_table.
    DATA temp83 TYPE string_table.
    DATA exp_schema LIKE temp83.
    DATA log TYPE REF TO zif_aff_log.
    CLEAR temp82.

    act_schema_co = test_generator->generate_type( temp82 ).

    CLEAR temp83.
    INSERT `{` INTO TABLE temp83.
    INSERT `  "$comment": "This file is autogenerated, do not edit manually, see https://github.com/SAP/abap-file-formats for more information.",` INTO TABLE temp83.
    INSERT `  "$schema": "https://json-schema.org/draft/2020-12/schema",` INTO TABLE temp83.
    INSERT `  "$id": "schema/id.json",` INTO TABLE temp83.
    INSERT `  "title": "Structure With Multiple Of Warning",` INTO TABLE temp83.
    INSERT `  "description": "This is a structure with not allowed multiple of value",` INTO TABLE temp83.
    INSERT `  "type": "object",` INTO TABLE temp83.
    INSERT `  "properties": {` INTO TABLE temp83.
    INSERT `    "integer": {` INTO TABLE temp83.
    INSERT `      "title": "Integer With Maximum",` INTO TABLE temp83.
    INSERT `      "description": "Integer with maximum",` INTO TABLE temp83.
    INSERT `      "type": "integer",` INTO TABLE temp83.
    INSERT `      "minimum": -2147483648,` INTO TABLE temp83.
    INSERT `      "maximum": 10` INTO TABLE temp83.
    INSERT `    },` INTO TABLE temp83.
    INSERT `    "integerWithMultiple": {` INTO TABLE temp83.
    INSERT `      "title": "Integer With Given Multiple",` INTO TABLE temp83.
    INSERT `      "description": "Integer with given multiple",` INTO TABLE temp83.
    INSERT `      "type": "integer",` INTO TABLE temp83.
    INSERT `      "exclusiveMinimum": 0,` INTO TABLE temp83.
    INSERT `      "maximum": 99999,` INTO TABLE temp83.
    INSERT `      "multipleOf": 1` INTO TABLE temp83.
    INSERT `    },` INTO TABLE temp83.
    INSERT `    "packedWithMultiple": {` INTO TABLE temp83.
    INSERT `      "title": "Packed Number With Multiple",` INTO TABLE temp83.
    INSERT `      "description": "Packed number with given multiple",` INTO TABLE temp83.
    INSERT `      "type": "number",` INTO TABLE temp83.
    INSERT `      "exclusiveMinimum": 0,` INTO TABLE temp83.
    INSERT `      "maximum": 999999.9` INTO TABLE temp83.
    INSERT `    }` INTO TABLE temp83.
    INSERT `  },` INTO TABLE temp83.
    INSERT `  "additionalProperties": false` INTO TABLE temp83.
    INSERT `}` INTO TABLE temp83.
    INSERT `` INTO TABLE temp83.

    exp_schema = temp83.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).

    log = cut->zif_aff_writer~get_log( ).

    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = zif_aff_log=>co_msg129
      exp_type           = zif_aff_log=>c_message_type-warning
      exp_component_name = 'STRUCTURE_MULTIPLE_OF_WARNING-PACKED_WITH_MULTIPLE' ).

  ENDMETHOD.

ENDCLASS.

CLASS ltcl_json_writer_abap_doc DEFINITION FINAL FOR TESTING
  DURATION MEDIUM
  RISK LEVEL HARMLESS.
  PRIVATE SECTION.
    CONSTANTS:
        schema_id TYPE string VALUE 'schema/id.json'.
    DATA cut TYPE REF TO zcl_aff_writer_json_schema.
    DATA test_generator TYPE REF TO zif_aff_generator.
    DATA log TYPE REF TO zif_aff_log.

    METHODS setup.

    METHODS: structure_with_different_enum FOR TESTING RAISING cx_static_check,
      standard_table FOR TESTING RAISING cx_static_check,
      nested_structure FOR TESTING RAISING cx_static_check,
      simple_structure FOR TESTING RAISING cx_static_check,
      simple_structure_single_field FOR TESTING RAISING cx_static_check,
      simple_structure_two_fields FOR TESTING RAISING cx_static_check,
      string_element FOR TESTING RAISING cx_static_check,
      simple_structure_dollar FOR TESTING RAISING cx_static_check,
      complex_type_with_enum FOR TESTING RAISING cx_static_check,
      number_element FOR TESTING RAISING cx_static_check,
      date_time_element FOR TESTING RAISING cx_static_check,
      nested_nested_structure FOR TESTING RAISING cx_static_check,
      nested_nested_simple FOR TESTING RAISING cx_static_check,
      table_in_nested_stru_with_ad FOR TESTING RAISING cx_static_check,
      nestes_table_with_ad FOR TESTING RAISING cx_static_check,
      format_version FOR TESTING RAISING cx_static_check,
      structure_with_table FOR TESTING RAISING cx_static_check,
      numerical_text_field FOR TESTING RAISING cx_static_check,
      structure_with_numbers FOR TESTING RAISING cx_static_check,
      structure_different_default FOR TESTING RAISING cx_static_check,
      nested_struc_with_default FOR TESTING RAISING cx_static_check,
      simple_table_with_callbackclas FOR TESTING RAISING cx_static_check,
      struct_with_table_callback FOR TESTING RAISING cx_static_check,
      element_with_callbackclas FOR TESTING RAISING cx_static_check,
      element_in_structure_callback FOR TESTING RAISING cx_static_check,
      table_of_struc_with_callback FOR TESTING RAISING cx_static_check,
      table_with_call_of_struc FOR TESTING RAISING cx_static_check,
      nested_table_with_callback FOR TESTING RAISING cx_static_check,
      struc_with_struc_callback FOR TESTING RAISING cx_static_check,
      structure_with_wrong_enum_link FOR TESTING RAISING cx_static_check,
      structure_with_wrong_default FOR TESTING RAISING cx_static_check,
      structure_with_wrong_callback FOR TESTING RAISING cx_static_check,
      hashed_table FOR TESTING RAISING cx_static_check,
      structure_with_tables FOR TESTING RAISING cx_static_check,
      structure_no_title_descr FOR TESTING RAISING cx_static_check,
      element_no_title_descr FOR TESTING RAISING cx_static_check,
      table_no_title_descr FOR TESTING RAISING cx_static_check,
      title_and_desc_escaped FOR TESTING RAISING cx_static_check,
      number_element_default FOR TESTING RAISING cx_static_check,
      unknown_annotation FOR TESTING RAISING cx_static_check,
      unknown_abap_doc_tag FOR TESTING RAISING cx_static_check,
      type_of_enumtype_and_co_differ FOR TESTING RAISING cx_static_check,
      structure_with_include FOR TESTING RAISING cx_static_check,
      description_too_long FOR TESTING RAISING cx_static_check,
      structure_with_default_problem FOR TESTING RAISING cx_static_check,
      get_extrema_integer FOR TESTING RAISING cx_static_check,
      get_extrema_decfloat16 FOR TESTING RAISING cx_static_check,
      get_extrema_ftype FOR TESTING RAISING cx_static_check,
      get_extrema_packed FOR TESTING RAISING cx_static_check,
      get_extrema_integer1 FOR TESTING RAISING cx_static_check,
      calculate_max_length FOR TESTING RAISING cx_static_check,
      original_description FOR TESTING RAISING cx_static_check,
      struc_with_own_enum_values FOR TESTING RAISING cx_static_check,
      content_encoded_integer FOR TESTING RAISING cx_static_check,
      content_encoding_unknown FOR TESTING RAISING cx_static_check,
      content_encoding FOR TESTING RAISING cx_static_check,
      content_media_type_integer FOR TESTING RAISING cx_static_check,
      content_media_type_string FOR TESTING RAISING cx_static_check,
      encoding_type_next_level FOR TESTING RAISING cx_static_check.

ENDCLASS.


CLASS zcl_aff_writer_json_schema DEFINITION LOCAL FRIENDS ltcl_json_writer_abap_doc.
CLASS ltcl_json_writer_abap_doc IMPLEMENTATION.

  METHOD setup.
    CREATE OBJECT cut TYPE zcl_aff_writer_json_schema EXPORTING SCHEMA_ID = schema_id.
    CREATE OBJECT test_generator TYPE zcl_aff_generator EXPORTING WRITER = cut.
  ENDMETHOD.

  METHOD number_element_default.
    DATA temp85 TYPE zcl_aff_test_types=>default_link.
    DATA act_schema TYPE string_table.
    DATA temp86 TYPE string_table.
    DATA temp66 LIKE LINE OF temp86.
    DATA temp67 LIKE LINE OF temp86.
    DATA temp68 LIKE LINE OF temp86.
    DATA temp87 LIKE LINE OF temp86.
    DATA exp_schema LIKE temp86.
    CLEAR temp85.

    act_schema = test_generator->generate_type( temp85 ).
*expect error /no output (type of type and constant has to be the same)


    CLEAR temp86.
    INSERT `{` INTO TABLE temp86.

    temp66 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp66 INTO TABLE temp86.

    temp67 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp67 INTO TABLE temp86.

    temp68 = |    "$id": "{ schema_id }",|.
    INSERT temp68 INTO TABLE temp86.
    INSERT `    "description": "Default type does not match constant type",` INTO TABLE temp86.
    INSERT `    "type": "integer",` INTO TABLE temp86.
    INSERT `    "minimum": -2147483648,` INTO TABLE temp86.
    INSERT `    "maximum": 2147483647` INTO TABLE temp86.
    INSERT `}` INTO TABLE temp86.

    INSERT temp87 INTO TABLE temp86.

    exp_schema = temp86.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Type of constant CO_TEST does not match type of DEFAULT_LINK`
      exp_component_name = `DEFAULT_LINK`
      exp_type           = zif_aff_log=>c_message_type-warning ).
  ENDMETHOD.

  METHOD original_description.
    DATA temp88 TYPE zcl_aff_test_types=>ty_header_60_src.
    DATA act_schema TYPE string_table.
    DATA temp89 TYPE string_table.
    DATA temp69 LIKE LINE OF temp89.
    DATA temp70 LIKE LINE OF temp89.
    DATA temp71 LIKE LINE OF temp89.
    DATA temp90 LIKE LINE OF temp89.
    DATA exp_schema LIKE temp89.
    CLEAR temp88.

    act_schema = test_generator->generate_type( temp88 ).


    CLEAR temp89.
    INSERT `{` INTO TABLE temp89.

    temp69 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp69 INTO TABLE temp89.

    temp70 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp70 INTO TABLE temp89.

    temp71 = |    "$id": "{ schema_id }",|.
    INSERT temp71 INTO TABLE temp89.
    INSERT `    "type": "object",` INTO TABLE temp89.
    INSERT `  "properties": {` INTO TABLE temp89.
    INSERT `    "originalLanguage": {` INTO TABLE temp89.
    INSERT `      "title": "Original Language",` INTO TABLE temp89.
    INSERT `      "description": "Original language of the ABAP object",` INTO TABLE temp89.
    INSERT `      "type": "string",` INTO TABLE temp89.
    INSERT `      "minLength": 2` INTO TABLE temp89.
    INSERT `    }` INTO TABLE temp89.
    INSERT `  },` INTO TABLE temp89.
    INSERT `  "additionalProperties": false` INTO TABLE temp89.
    INSERT `}` INTO TABLE temp89.

    INSERT temp90 INTO TABLE temp89.

    exp_schema = temp89.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD type_of_enumtype_and_co_differ.
    DATA temp91 TYPE zcl_aff_test_types=>enum.
    TRY.

        CLEAR temp91.
        test_generator->generate_type( temp91 ).
        cl_abap_unit_assert=>fail( ).
      CATCH zcx_aff_tools.
    ENDTRY.
  ENDMETHOD.

  METHOD unknown_annotation.
    DATA temp92 TYPE zcl_aff_test_types=>unknown_annotation.
    DATA act_schema TYPE string_table.
    DATA temp93 TYPE string_table.
    DATA temp72 LIKE LINE OF temp93.
    DATA temp73 LIKE LINE OF temp93.
    DATA temp74 LIKE LINE OF temp93.
    DATA temp94 LIKE LINE OF temp93.
    DATA exp_schema LIKE temp93.
    CLEAR temp92.

    act_schema = test_generator->generate_type( temp92 ).

    "expected: no title or description

    CLEAR temp93.
    INSERT `{` INTO TABLE temp93.

    temp72 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp72 INTO TABLE temp93.

    temp73 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp73 INTO TABLE temp93.

    temp74 = |    "$id": "{ schema_id }",|.
    INSERT temp74 INTO TABLE temp93.
    INSERT `    "type": "string"` INTO TABLE temp93.
    INSERT `}` INTO TABLE temp93.

    INSERT temp94 INTO TABLE temp93.

    exp_schema = temp93.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Annotation $hiddenabc is unknown`
      exp_type           = zif_aff_log=>c_message_type-warning
      exp_component_name = `UNKNOWN_ANNOTATION` ).
  ENDMETHOD.


  METHOD content_encoded_integer.
    DATA temp95 TYPE zcl_aff_test_types=>content_encoded_integer.
    DATA act_schema TYPE string_table.
    DATA temp96 TYPE string_table.
    DATA temp75 LIKE LINE OF temp96.
    DATA temp76 LIKE LINE OF temp96.
    DATA temp77 LIKE LINE OF temp96.
    DATA temp97 LIKE LINE OF temp96.
    DATA exp_schema LIKE temp96.
    CLEAR temp95.

    act_schema = test_generator->generate_type( temp95 ).

    "expected: no content encoding in schema

    CLEAR temp96.
    INSERT `{` INTO TABLE temp96.

    temp75 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp75 INTO TABLE temp96.

    temp76 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp76 INTO TABLE temp96.

    temp77 = |    "$id": "{ schema_id }",|.
    INSERT temp77 INTO TABLE temp96.
    INSERT `    "type": "integer",` INTO TABLE temp96.
    INSERT `    "minimum": -2147483648,` INTO TABLE temp96.
    INSERT `    "maximum": 2147483647` INTO TABLE temp96.
    INSERT `}` INTO TABLE temp96.

    INSERT temp97 INTO TABLE temp96.

    exp_schema = temp96.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Only elements of character-like type can have annotation $contentEncoding or $contentMediaType`
      exp_type           = zif_aff_log=>c_message_type-warning
      exp_component_name = `CONTENT_ENCODED_INTEGER` ).
  ENDMETHOD.


  METHOD content_encoding_unknown.
    DATA temp98 TYPE zcl_aff_test_types=>unknown_content_encoded_string.
    DATA act_schema TYPE string_table.
    DATA temp99 TYPE string_table.
    DATA temp78 LIKE LINE OF temp99.
    DATA temp79 LIKE LINE OF temp99.
    DATA temp80 LIKE LINE OF temp99.
    DATA temp100 LIKE LINE OF temp99.
    DATA exp_schema LIKE temp99.
    CLEAR temp98.

    act_schema = test_generator->generate_type( temp98 ).

    "expected: no content encoding in schema

    CLEAR temp99.
    INSERT `{` INTO TABLE temp99.

    temp78 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp78 INTO TABLE temp99.

    temp79 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp79 INTO TABLE temp99.

    temp80 = |    "$id": "{ schema_id }",|.
    INSERT temp80 INTO TABLE temp99.
    INSERT `    "type": "string"` INTO TABLE temp99.
    INSERT `}` INTO TABLE temp99.

    INSERT temp100 INTO TABLE temp99.

    exp_schema = temp99.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `The content encoding is unknown`
      exp_type           = zif_aff_log=>c_message_type-warning
      exp_component_name = `UNKNOWN_CONTENT_ENCODED_STRING` ).
  ENDMETHOD.

  METHOD content_encoding.
    DATA temp101 TYPE zcl_aff_test_types=>content_encoded_string.
    DATA act_schema TYPE string_table.
    DATA temp102 TYPE string_table.
    DATA temp81 LIKE LINE OF temp102.
    DATA temp82 LIKE LINE OF temp102.
    DATA temp83 LIKE LINE OF temp102.
    DATA temp103 LIKE LINE OF temp102.
    DATA exp_schema LIKE temp102.
    CLEAR temp101.

    act_schema = test_generator->generate_type( temp101 ).


    CLEAR temp102.
    INSERT `{` INTO TABLE temp102.

    temp81 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp81 INTO TABLE temp102.

    temp82 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp82 INTO TABLE temp102.

    temp83 = |    "$id": "{ schema_id }",|.
    INSERT temp83 INTO TABLE temp102.
    INSERT `    "type": "string",` INTO TABLE temp102.
    INSERT `    "contentEncoding": "base64"` INTO TABLE temp102.
    INSERT `}` INTO TABLE temp102.

    INSERT temp103 INTO TABLE temp102.

    exp_schema = temp102.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-warning ).
  ENDMETHOD.

  METHOD content_media_type_string.
    DATA temp104 TYPE zcl_aff_test_types=>content_media_type_string.
    DATA act_schema TYPE string_table.
    DATA temp105 TYPE string_table.
    DATA temp84 LIKE LINE OF temp105.
    DATA temp85 LIKE LINE OF temp105.
    DATA temp86 LIKE LINE OF temp105.
    DATA temp106 LIKE LINE OF temp105.
    DATA exp_schema LIKE temp105.
    CLEAR temp104.

    act_schema = test_generator->generate_type( temp104 ).


    CLEAR temp105.
    INSERT `{` INTO TABLE temp105.

    temp84 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp84 INTO TABLE temp105.

    temp85 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp85 INTO TABLE temp105.

    temp86 = |    "$id": "{ schema_id }",|.
    INSERT temp86 INTO TABLE temp105.
    INSERT `    "type": "string",` INTO TABLE temp105.
    INSERT `    "contentMediaType": "text/html"` INTO TABLE temp105.
    INSERT `}` INTO TABLE temp105.

    INSERT temp106 INTO TABLE temp105.

    exp_schema = temp105.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-warning ).
  ENDMETHOD.

  METHOD content_media_type_integer.
    DATA temp107 TYPE zcl_aff_test_types=>content_media_type_integer.
    DATA act_schema TYPE string_table.
    DATA temp108 TYPE string_table.
    DATA temp87 LIKE LINE OF temp108.
    DATA temp88 LIKE LINE OF temp108.
    DATA temp89 LIKE LINE OF temp108.
    DATA temp109 LIKE LINE OF temp108.
    DATA exp_schema LIKE temp108.
    CLEAR temp107.

    act_schema = test_generator->generate_type( temp107 ).

    "expected: no content media type in schema

    CLEAR temp108.
    INSERT `{` INTO TABLE temp108.

    temp87 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp87 INTO TABLE temp108.

    temp88 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp88 INTO TABLE temp108.

    temp89 = |    "$id": "{ schema_id }",|.
    INSERT temp89 INTO TABLE temp108.
    INSERT `    "type": "integer",` INTO TABLE temp108.
    INSERT `    "minimum": -2147483648,` INTO TABLE temp108.
    INSERT `    "maximum": 2147483647` INTO TABLE temp108.
    INSERT `}` INTO TABLE temp108.

    INSERT temp109 INTO TABLE temp108.

    exp_schema = temp108.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Only elements of character-like type can have annotation $contentEncoding or $contentMediaType`
      exp_type           = zif_aff_log=>c_message_type-warning
      exp_component_name = `CONTENT_MEDIA_TYPE_INTEGER` ).
  ENDMETHOD.

  METHOD encoding_type_next_level.
    DATA temp110 TYPE zcl_aff_test_types=>struc_with_type_encoding.
    DATA act_schema TYPE string_table.
    DATA temp111 TYPE string_table.
    DATA temp90 LIKE LINE OF temp111.
    DATA temp91 LIKE LINE OF temp111.
    DATA temp92 LIKE LINE OF temp111.
    DATA temp112 LIKE LINE OF temp111.
    DATA exp_schema LIKE temp111.
    CLEAR temp110.

    act_schema = test_generator->generate_type( temp110 ).


    CLEAR temp111.
    INSERT `{` INTO TABLE temp111.

    temp90 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp90 INTO TABLE temp111.

    temp91 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp91 INTO TABLE temp111.

    temp92 = |    "$id": "{ schema_id }",|.
    INSERT temp92 INTO TABLE temp111.
    INSERT `    "type": "object",` INTO TABLE temp111.
    INSERT `    "properties": {` INTO TABLE temp111.
    INSERT `      "component": {` INTO TABLE temp111.
    INSERT `        "type": "string",` INTO TABLE temp111.
    INSERT `        "contentEncoding": "base64",` INTO TABLE temp111.
    INSERT `        "contentMediaType": "text/html"` INTO TABLE temp111.
    INSERT `      }` INTO TABLE temp111.
    INSERT `    },` INTO TABLE temp111.
    INSERT `    "additionalProperties": false` INTO TABLE temp111.
    INSERT `}` INTO TABLE temp111.

    INSERT temp112 INTO TABLE temp111.

    exp_schema = temp111.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD unknown_abap_doc_tag.
    "description is not found
    DATA temp113 TYPE zcl_aff_test_types=>description_not_found.
    DATA act_schema TYPE string_table.
    DATA temp114 TYPE string_table.
    DATA temp93 LIKE LINE OF temp114.
    DATA temp94 LIKE LINE OF temp114.
    DATA temp95 LIKE LINE OF temp114.
    DATA temp115 LIKE LINE OF temp114.
    DATA exp_schema LIKE temp114.
    CLEAR temp113.

    act_schema = test_generator->generate_type( temp113 ).

    CLEAR temp114.
    INSERT `{` INTO TABLE temp114.

    temp93 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp93 INTO TABLE temp114.

    temp94 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp94 INTO TABLE temp114.

    temp95 = |    "$id": "{ schema_id }",|.
    INSERT temp95 INTO TABLE temp114.
    INSERT `    "title": "title",` INTO TABLE temp114.
    INSERT `    "description": "description <p class=\"shorttext2\">Title</p>",` INTO TABLE temp114.
    INSERT `    "type": "string"` INTO TABLE temp114.
    INSERT `}` INTO TABLE temp114.

    INSERT temp115 INTO TABLE temp114.

    exp_schema = temp114.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD title_and_desc_escaped.
    DATA temp116 TYPE zcl_aff_test_types=>num_text1.
    DATA act_schema_co TYPE string_table.
    DATA temp117 TYPE string_table.
    DATA temp96 LIKE LINE OF temp117.
    DATA temp97 LIKE LINE OF temp117.
    DATA temp98 LIKE LINE OF temp117.
    DATA temp118 LIKE LINE OF temp117.
    DATA exp_schema LIKE temp117.
    CLEAR temp116.

    act_schema_co = test_generator->generate_type( temp116 ).

    CLEAR temp117.
    INSERT `{` INTO TABLE temp117.

    temp96 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp96 INTO TABLE temp117.

    temp97 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp97 INTO TABLE temp117.

    temp98 = |    "$id": "{ schema_id }",|.
    INSERT temp98 INTO TABLE temp117.
    INSERT `    "title": "Test title \"\\",` INTO TABLE temp117.
    INSERT `    "description": "Test description \"\\",` INTO TABLE temp117.
    INSERT `    "type": "string",` INTO TABLE temp117.
    INSERT `    "maxLength": 4, ` INTO TABLE temp117.
    INSERT `    "pattern": "^[0-9]+$"` INTO TABLE temp117.
    INSERT `}` INTO TABLE temp117.

    INSERT temp118 INTO TABLE temp117.

    exp_schema = temp117.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD format_version.
    DATA temp119 TYPE zcl_aff_test_types=>ty_format_version.
    DATA act_schema TYPE string_table.
    DATA temp120 TYPE string_table.
    DATA temp99 LIKE LINE OF temp120.
    DATA temp100 LIKE LINE OF temp120.
    DATA temp101 LIKE LINE OF temp120.
    DATA temp121 LIKE LINE OF temp120.
    DATA exp_schema LIKE temp120.
    CLEAR temp119.

    act_schema = test_generator->generate_type( temp119 ).

    CLEAR temp120.
    INSERT `   {` INTO TABLE temp120.

    temp99 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp99 INTO TABLE temp120.

    temp100 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp100 INTO TABLE temp120.

    temp101 = |    "$id": "{ schema_id }",|.
    INSERT temp101 INTO TABLE temp120.
    INSERT `     "title": "Constant With Field Format Version",` INTO TABLE temp120.
    INSERT `     "description": "Constant with field format_version",` INTO TABLE temp120.
    INSERT `     "type": "object",` INTO TABLE temp120.
    INSERT `     "properties": {` INTO TABLE temp120.
    INSERT `       "formatVersion": {` INTO TABLE temp120.
    INSERT `         "title": "ABAP File Format Version",` INTO TABLE temp120.
    INSERT `         "description": "The ABAP file format version",` INTO TABLE temp120.
    INSERT `         "type": "string",` INTO TABLE temp120.
    INSERT `         "const": "1"` INTO TABLE temp120.
    INSERT `       },` INTO TABLE temp120.
    INSERT `       "field1": {` INTO TABLE temp120.
    INSERT `         "title": "Other Field",` INTO TABLE temp120.
    INSERT `         "description": "Other field",` INTO TABLE temp120.
    INSERT `         "type": "integer",` INTO TABLE temp120.
    INSERT `         "minimum": -2147483648,` INTO TABLE temp120.
    INSERT `         "maximum": 2147483647` INTO TABLE temp120.
    INSERT `       }` INTO TABLE temp120.
    INSERT `     },` INTO TABLE temp120.
    INSERT `     "additionalProperties": false` INTO TABLE temp120.
    INSERT `   }` INTO TABLE temp120.

    INSERT temp121 INTO TABLE temp120.

    exp_schema = temp120.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD number_element.
    DATA temp122 TYPE zcl_aff_test_types=>integer.
    DATA act_schema TYPE string_table.
    DATA temp123 TYPE string_table.
    DATA temp102 LIKE LINE OF temp123.
    DATA temp103 LIKE LINE OF temp123.
    DATA temp104 LIKE LINE OF temp123.
    DATA temp124 LIKE LINE OF temp123.
    DATA exp_schema LIKE temp123.
    CLEAR temp122.

    act_schema = test_generator->generate_type( temp122 ).

    CLEAR temp123.
    INSERT `{` INTO TABLE temp123.

    temp102 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp102 INTO TABLE temp123.

    temp103 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp103 INTO TABLE temp123.

    temp104 = |    "$id": "{ schema_id }",|.
    INSERT temp104 INTO TABLE temp123.
    INSERT `    "title": "myInteger",` INTO TABLE temp123.
    INSERT `    "description": "A simple Integer",` INTO TABLE temp123.
    INSERT `    "type": "integer",` INTO TABLE temp123.
    INSERT `    "minimum": -2147483648,` INTO TABLE temp123.
    INSERT `    "maximum": 2147483647` INTO TABLE temp123.
    INSERT `}` INTO TABLE temp123.

    INSERT temp124 INTO TABLE temp123.

    exp_schema = temp123.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD string_element.
    DATA temp125 TYPE zcl_aff_test_types=>mystring.
    DATA act_schema TYPE string_table.
    DATA temp126 TYPE string_table.
    DATA temp105 LIKE LINE OF temp126.
    DATA temp106 LIKE LINE OF temp126.
    DATA temp107 LIKE LINE OF temp126.
    DATA temp127 LIKE LINE OF temp126.
    DATA exp_schema LIKE temp126.
    CLEAR temp125.

    act_schema = test_generator->generate_type( temp125 ).

    CLEAR temp126.
    INSERT `{` INTO TABLE temp126.

    temp105 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp105 INTO TABLE temp126.

    temp106 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp106 INTO TABLE temp126.

    temp107 = |    "$id": "{ schema_id }",|.
    INSERT temp107 INTO TABLE temp126.
    INSERT `    "title": "myStringName",` INTO TABLE temp126.
    INSERT `    "description": "This is a string",` INTO TABLE temp126.
    INSERT `    "type": "string",` INTO TABLE temp126.
    INSERT `    "maxLength": 3` INTO TABLE temp126.
    INSERT `}` INTO TABLE temp126.

    INSERT temp127 INTO TABLE temp126.

    exp_schema = temp126.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD date_time_element.
    DATA temp128 TYPE zcl_aff_test_types=>my_date.
    DATA act_schema TYPE string_table.
    DATA temp129 TYPE string_table.
    DATA temp108 LIKE LINE OF temp129.
    DATA temp109 LIKE LINE OF temp129.
    DATA temp110 LIKE LINE OF temp129.
    DATA temp130 LIKE LINE OF temp129.
    DATA exp_schema LIKE temp129.
    CLEAR temp128.

    act_schema = test_generator->generate_type( temp128 ).

    CLEAR temp129.
    INSERT `{` INTO TABLE temp129.

    temp108 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp108 INTO TABLE temp129.

    temp109 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp109 INTO TABLE temp129.

    temp110 = |    "$id": "{ schema_id }",|.
    INSERT temp110 INTO TABLE temp129.
    INSERT `    "title": "Date",` INTO TABLE temp129.
    INSERT `    "description": "This is a date",` INTO TABLE temp129.
    INSERT `    "type": "string",` INTO TABLE temp129.
    INSERT `    "format" :"date-time"` INTO TABLE temp129.
    INSERT `}` INTO TABLE temp129.

    INSERT temp130 INTO TABLE temp129.

    exp_schema = temp129.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD simple_structure.
    DATA temp131 TYPE zcl_aff_test_types=>my_structure.
    DATA act_schema TYPE string_table.
    DATA temp132 TYPE string_table.
    DATA temp111 LIKE LINE OF temp132.
    DATA temp112 LIKE LINE OF temp132.
    DATA temp113 LIKE LINE OF temp132.
    DATA temp133 LIKE LINE OF temp132.
    DATA exp_schema LIKE temp132.
    CLEAR temp131.

    act_schema = test_generator->generate_type( temp131 ).

    CLEAR temp132.
    INSERT `{` INTO TABLE temp132.

    temp111 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp111 INTO TABLE temp132.

    temp112 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp112 INTO TABLE temp132.

    temp113 = |    "$id": "{ schema_id }",|.
    INSERT temp113 INTO TABLE temp132.
    INSERT `    "title": "mySimpleStructure",` INTO TABLE temp132.
    INSERT `    "description": "This is a simple structure",` INTO TABLE temp132.
    INSERT `    "type": "object",` INTO TABLE temp132.
    INSERT `    "properties": {` INTO TABLE temp132.
    INSERT `        "myFirstElement": {` INTO TABLE temp132.
    INSERT `            "title": "First Element",` INTO TABLE temp132.
    INSERT `            "description": "This is the first element",` INTO TABLE temp132.
    INSERT `            "type": "string",` INTO TABLE temp132.
    INSERT `            "minLength": 4` INTO TABLE temp132.
    INSERT `        },` INTO TABLE temp132.
    INSERT `        "mySecondElement": {` INTO TABLE temp132.
    INSERT `            "title": "Second Element",` INTO TABLE temp132.
    INSERT `            "description": "This is the second element",` INTO TABLE temp132.
    INSERT `            "type": "integer",` INTO TABLE temp132.
    INSERT `            "minimum": -2147483648,` INTO TABLE temp132.
    INSERT `            "maximum": 2147483647` INTO TABLE temp132.
    INSERT `        }` INTO TABLE temp132.
    INSERT `    },` INTO TABLE temp132.
    INSERT `    "additionalProperties": false` INTO TABLE temp132.
    INSERT `}` INTO TABLE temp132.

    INSERT temp133 INTO TABLE temp132.

    exp_schema = temp132.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD simple_structure_single_field.
    DATA temp134 TYPE zcl_aff_test_types=>my_structure_single.
    DATA act_schema TYPE string_table.
    DATA temp135 TYPE string_table.
    DATA temp114 LIKE LINE OF temp135.
    DATA temp115 LIKE LINE OF temp135.
    DATA temp116 LIKE LINE OF temp135.
    DATA temp136 LIKE LINE OF temp135.
    DATA exp_schema LIKE temp135.
    CLEAR temp134.

    act_schema = test_generator->generate_type( temp134 ).

    CLEAR temp135.
    INSERT `{` INTO TABLE temp135.

    temp114 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp114 INTO TABLE temp135.

    temp115 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp115 INTO TABLE temp135.

    temp116 = |    "$id": "{ schema_id }",|.
    INSERT temp116 INTO TABLE temp135.
    INSERT `    "title": "mySimpleStructure",` INTO TABLE temp135.
    INSERT `    "description": "This is a simple structure",` INTO TABLE temp135.
    INSERT `    "type": "object",` INTO TABLE temp135.
    INSERT `    "properties": {` INTO TABLE temp135.
    INSERT `        "fooElement": {` INTO TABLE temp135.
    INSERT `            "title": "Foo Element",` INTO TABLE temp135.
    INSERT `            "description": "This is the first element",` INTO TABLE temp135.
    INSERT `            "type": "string",` INTO TABLE temp135.
    INSERT `            "minLength": 4` INTO TABLE temp135.
    INSERT `        }` INTO TABLE temp135.
    INSERT `    },` INTO TABLE temp135.
    INSERT `    "additionalProperties": false` INTO TABLE temp135.
    INSERT `}` INTO TABLE temp135.

    INSERT temp136 INTO TABLE temp135.

    exp_schema = temp135.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD simple_structure_two_fields.
    DATA temp137 TYPE zcl_aff_test_types=>my_structure_two.
    DATA act_schema TYPE string_table.
    DATA temp138 TYPE string_table.
    DATA temp117 LIKE LINE OF temp138.
    DATA temp118 LIKE LINE OF temp138.
    DATA temp119 LIKE LINE OF temp138.
    DATA temp139 LIKE LINE OF temp138.
    DATA exp_schema LIKE temp138.
    CLEAR temp137.

    act_schema = test_generator->generate_type( temp137 ).

    CLEAR temp138.
    INSERT `{` INTO TABLE temp138.

    temp117 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp117 INTO TABLE temp138.

    temp118 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp118 INTO TABLE temp138.

    temp119 = |    "$id": "{ schema_id }",|.
    INSERT temp119 INTO TABLE temp138.
    INSERT `    "description": "This is a two field structure",` INTO TABLE temp138.
    INSERT `    "type": "object",` INTO TABLE temp138.
    INSERT `    "properties": {` INTO TABLE temp138.
    INSERT `        "foo1": {` INTO TABLE temp138.
    INSERT `            "description": "foo1 element",` INTO TABLE temp138.
    INSERT `            "type": "integer",` INTO TABLE temp138.
    INSERT `            "minimum": -2147483648,` INTO TABLE temp138.
    INSERT `            "maximum": 2147483647` INTO TABLE temp138.
    INSERT `        },` INTO TABLE temp138.
    INSERT `        "foo2": {` INTO TABLE temp138.
    INSERT `            "description": "foo2 element",` INTO TABLE temp138.
    INSERT `            "type": "integer",` INTO TABLE temp138.
    INSERT `            "minimum": -2147483648,` INTO TABLE temp138.
    INSERT `            "maximum": 2147483647` INTO TABLE temp138.
    INSERT `        }` INTO TABLE temp138.
    INSERT `    },` INTO TABLE temp138.
    INSERT `    "additionalProperties": false` INTO TABLE temp138.
    INSERT `}` INTO TABLE temp138.

    INSERT temp139 INTO TABLE temp138.

    exp_schema = temp138.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-warning ).
  ENDMETHOD.

  METHOD simple_structure_dollar.
    DATA temp140 TYPE zcl_aff_test_types=>my_structure2.
    DATA act_schema TYPE string_table.
    DATA temp141 TYPE string_table.
    DATA temp120 LIKE LINE OF temp141.
    DATA temp121 LIKE LINE OF temp141.
    DATA temp122 LIKE LINE OF temp141.
    DATA temp142 LIKE LINE OF temp141.
    DATA exp_schema LIKE temp141.
    CLEAR temp140.

    act_schema = test_generator->generate_type( temp140 ).

    CLEAR temp141.
    INSERT `{` INTO TABLE temp141.

    temp120 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp120 INTO TABLE temp141.

    temp121 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp121 INTO TABLE temp141.

    temp122 = |    "$id": "{ schema_id }",|.
    INSERT temp122 INTO TABLE temp141.
    INSERT `    "title": "mySimpleStructure",` INTO TABLE temp141.
    INSERT `    "description": "This is a $ simple st",` INTO TABLE temp141.
    INSERT `    "type": "object",` INTO TABLE temp141.
    INSERT `    "properties": {` INTO TABLE temp141.
    INSERT `        "myFirstElement": {` INTO TABLE temp141.
    INSERT `            "title": "First Element",` INTO TABLE temp141.
    INSERT `            "description": "This is the first element",` INTO TABLE temp141.
    INSERT `            "type": "string",` INTO TABLE temp141.
    INSERT `            "maxLength": 3` INTO TABLE temp141.
    INSERT `        },` INTO TABLE temp141.
    INSERT `        "mySecondElement": {` INTO TABLE temp141.
    INSERT `            "title": "Second Element",` INTO TABLE temp141.
    INSERT `            "description": "This is the second element",` INTO TABLE temp141.
    INSERT `            "type": "integer",` INTO TABLE temp141.
    INSERT `            "minimum": -2147483648,` INTO TABLE temp141.
    INSERT `            "maximum": 2147483647` INTO TABLE temp141.
    INSERT `        }` INTO TABLE temp141.
    INSERT `    },` INTO TABLE temp141.
    INSERT `    "additionalProperties": false,` INTO TABLE temp141.
    INSERT `    "required": [` INTO TABLE temp141.
    INSERT `      "myFirstElement" ` INTO TABLE temp141.
    INSERT `    ]` INTO TABLE temp141.
    INSERT `}` INTO TABLE temp141.

    INSERT temp142 INTO TABLE temp141.

    exp_schema = temp141.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Annotation $ructure is unknown`
      exp_type           = zif_aff_log=>c_message_type-warning
      exp_component_name = `MY_STRUCTURE2` ).
  ENDMETHOD.


  METHOD nested_structure.
    DATA temp143 TYPE zcl_aff_test_types=>my_structure3.
    DATA act_schema TYPE string_table.
    DATA temp144 TYPE string_table.
    DATA temp123 LIKE LINE OF temp144.
    DATA temp124 LIKE LINE OF temp144.
    DATA temp125 LIKE LINE OF temp144.
    DATA temp145 LIKE LINE OF temp144.
    DATA exp_schema LIKE temp144.
    CLEAR temp143.

    act_schema = test_generator->generate_type( temp143 ).

    CLEAR temp144.
    INSERT `{` INTO TABLE temp144.

    temp123 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp123 INTO TABLE temp144.

    temp124 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp124 INTO TABLE temp144.

    temp125 = |    "$id": "{ schema_id }",|.
    INSERT temp125 INTO TABLE temp144.
    INSERT `    "title": "myStructure",` INTO TABLE temp144.
    INSERT `    "description": "This is a complex structure",` INTO TABLE temp144.
    INSERT `    "type": "object",` INTO TABLE temp144.
    INSERT `    "properties": {` INTO TABLE temp144.
    INSERT `        "nestedStruc": {` INTO TABLE temp144.
    INSERT `            "title": "nestedStruc",` INTO TABLE temp144.
    INSERT `            "description": "This is the nested structure",` INTO TABLE temp144.
    INSERT `            "type": "object",` INTO TABLE temp144.
    INSERT `            "properties": {` INTO TABLE temp144.
    INSERT `                "myElement": {` INTO TABLE temp144.
    INSERT `                    "title": "myElementComponente",` INTO TABLE temp144.
    INSERT `                    "description": "This is a string element",` INTO TABLE temp144.
    INSERT `                    "type": "string"` INTO TABLE temp144.
    INSERT `                }` INTO TABLE temp144.
    INSERT `            },` INTO TABLE temp144.
    INSERT `            "additionalProperties": false` INTO TABLE temp144.
    INSERT `        },` INTO TABLE temp144.
    INSERT `        "myElement": {` INTO TABLE temp144.
    INSERT `          "title": "My Element",` INTO TABLE temp144.
    INSERT `          "description": "This is my element",` INTO TABLE temp144.
    INSERT `          "type": "string"` INTO TABLE temp144.
    INSERT `       }` INTO TABLE temp144.
    INSERT `    },` INTO TABLE temp144.
    INSERT `    "additionalProperties": false,` INTO TABLE temp144.
    INSERT `    "required": [ ` INTO TABLE temp144.
    INSERT `      "myElement" ` INTO TABLE temp144.
    INSERT `    ]` INTO TABLE temp144.
    INSERT `}` INTO TABLE temp144.

    INSERT temp145 INTO TABLE temp144.

    exp_schema = temp144.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD standard_table.
    DATA temp146 TYPE zcl_aff_test_types=>my_standard_table.
    DATA act_schema TYPE string_table.
    DATA temp147 TYPE string_table.
    DATA temp126 LIKE LINE OF temp147.
    DATA temp127 LIKE LINE OF temp147.
    DATA temp128 LIKE LINE OF temp147.
    DATA temp148 LIKE LINE OF temp147.
    DATA exp_schema LIKE temp147.
    CLEAR temp146.

    act_schema = test_generator->generate_type( temp146 ).

    CLEAR temp147.
    INSERT `{` INTO TABLE temp147.

    temp126 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp126 INTO TABLE temp147.

    temp127 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp127 INTO TABLE temp147.

    temp128 = |    "$id": "{ schema_id }",|.
    INSERT temp128 INTO TABLE temp147.
    INSERT `    "title": "A Standard Table",` INTO TABLE temp147.
    INSERT `    "description": "A standard table of myString",` INTO TABLE temp147.
    INSERT `    "type": "array",` INTO TABLE temp147.
    INSERT `    "items": {` INTO TABLE temp147.
    INSERT `        "title": "myStringName",` INTO TABLE temp147.
    INSERT `        "description": "This is a string",` INTO TABLE temp147.
    INSERT `        "type": "string",` INTO TABLE temp147.
    INSERT `        "maxLength": 3` INTO TABLE temp147.
    INSERT `    }` INTO TABLE temp147.
    INSERT `}` INTO TABLE temp147.

    INSERT temp148 INTO TABLE temp147.

    exp_schema = temp147.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD hashed_table.
    DATA temp149 TYPE zcl_aff_test_types=>my_hashed_table.
    DATA act_schema TYPE string_table.
    DATA temp150 TYPE string_table.
    DATA temp129 LIKE LINE OF temp150.
    DATA temp130 LIKE LINE OF temp150.
    DATA temp131 LIKE LINE OF temp150.
    DATA temp151 LIKE LINE OF temp150.
    DATA exp_schema LIKE temp150.
    CLEAR temp149.

    act_schema = test_generator->generate_type( temp149 ).

    CLEAR temp150.
    INSERT `{` INTO TABLE temp150.

    temp129 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp129 INTO TABLE temp150.

    temp130 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp130 INTO TABLE temp150.

    temp131 = |    "$id": "{ schema_id }",|.
    INSERT temp131 INTO TABLE temp150.
    INSERT `    "title": "A Hashed Table",` INTO TABLE temp150.
    INSERT `    "description": "A hashed table of my_structure",` INTO TABLE temp150.
    INSERT `    "type": "array",` INTO TABLE temp150.
    INSERT `    "uniqueItems" : true,` INTO TABLE temp150.
    INSERT `    "items": {` INTO TABLE temp150.
    INSERT `        "title": "mySimpleStructure",` INTO TABLE temp150.
    INSERT `        "description": "This is a simple structure",` INTO TABLE temp150.
    INSERT `        "type": "object",` INTO TABLE temp150.
    INSERT `        "properties": {` INTO TABLE temp150.
    INSERT `            "myFirstElement": {` INTO TABLE temp150.
    INSERT `                "title": "First Element",` INTO TABLE temp150.
    INSERT `                "description": "This is the first element",` INTO TABLE temp150.
    INSERT `                "type": "string",` INTO TABLE temp150.
    INSERT `                "minLength": 4` INTO TABLE temp150.
    INSERT `            }, ` INTO TABLE temp150.
    INSERT `            "mySecondElement": {` INTO TABLE temp150.
    INSERT `                "title": "Second Element",` INTO TABLE temp150.
    INSERT `                "description": "This is the second element",` INTO TABLE temp150.
    INSERT `                "type": "integer",` INTO TABLE temp150.
    INSERT `                "minimum": -2147483648,` INTO TABLE temp150.
    INSERT `                "maximum": 2147483647` INTO TABLE temp150.
    INSERT `            } ` INTO TABLE temp150.
    INSERT `        },` INTO TABLE temp150.
    INSERT `        "additionalProperties": false` INTO TABLE temp150.
    INSERT `    }` INTO TABLE temp150.
    INSERT `}` INTO TABLE temp150.

    INSERT temp151 INTO TABLE temp150.

    exp_schema = temp150.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD structure_with_tables.
    DATA temp152 TYPE zcl_aff_test_types=>my_structure_with_tables.
    DATA act_schema TYPE string_table.
    DATA temp153 TYPE string_table.
    DATA temp132 LIKE LINE OF temp153.
    DATA temp133 LIKE LINE OF temp153.
    DATA temp134 LIKE LINE OF temp153.
    DATA temp154 LIKE LINE OF temp153.
    DATA exp_schema LIKE temp153.
    CLEAR temp152.

    act_schema = test_generator->generate_type( temp152 ).

    CLEAR temp153.
    INSERT `{` INTO TABLE temp153.

    temp132 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp132 INTO TABLE temp153.

    temp133 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp133 INTO TABLE temp153.

    temp134 = |    "$id": "{ schema_id }",|.
    INSERT temp134 INTO TABLE temp153.
    INSERT `    "title": "A Structure With Tables",` INTO TABLE temp153.
    INSERT `    "description": "A structure with different table types",` INTO TABLE temp153.
    INSERT `    "type": "object",` INTO TABLE temp153.
    INSERT `    "properties": {` INTO TABLE temp153.
    INSERT `        "firstTable": {` INTO TABLE temp153.
    INSERT `            "title": "First Table",` INTO TABLE temp153.
    INSERT `            "description": "First table",` INTO TABLE temp153.
    INSERT `            "type": "array",` INTO TABLE temp153.
    INSERT `            "uniqueItems": true,` INTO TABLE temp153.
    INSERT `            "items": {` INTO TABLE temp153.
    INSERT `                "title": "mySimpleStructure",` INTO TABLE temp153.
    INSERT `                "description": "This is a simple structure",` INTO TABLE temp153.
    INSERT `                "type": "object",` INTO TABLE temp153.
    INSERT `                "properties": {` INTO TABLE temp153.
    INSERT `                    "myFirstElement": {` INTO TABLE temp153.
    INSERT `                        "title": "First Element",` INTO TABLE temp153.
    INSERT `                        "description": "This is the first element",` INTO TABLE temp153.
    INSERT `                        "type": "string",` INTO TABLE temp153.
    INSERT `                        "minLength": 4` INTO TABLE temp153.
    INSERT `                    }, ` INTO TABLE temp153.
    INSERT `                    "mySecondElement": {` INTO TABLE temp153.
    INSERT `                        "title": "Second Element",` INTO TABLE temp153.
    INSERT `                        "description": "This is the second element",` INTO TABLE temp153.
    INSERT `                        "type": "integer",` INTO TABLE temp153.
    INSERT `                        "minimum": -2147483648,` INTO TABLE temp153.
    INSERT `                        "maximum": 2147483647` INTO TABLE temp153.
    INSERT `                    } ` INTO TABLE temp153.
    INSERT `                },` INTO TABLE temp153.
    INSERT `                "additionalProperties": false` INTO TABLE temp153.
    INSERT `            }` INTO TABLE temp153.
    INSERT `        },` INTO TABLE temp153.
    INSERT `        "secondTable": {` INTO TABLE temp153.
    INSERT `            "title": "Second Table",` INTO TABLE temp153.
    INSERT `            "description": "Second table",` INTO TABLE temp153.
    INSERT `            "type": "array",` INTO TABLE temp153.
    INSERT `            "items": {` INTO TABLE temp153.
    INSERT `                "title": "mySimpleStructure",` INTO TABLE temp153.
    INSERT `                "description": "This is a simple structure",` INTO TABLE temp153.
    INSERT `                "type": "object",` INTO TABLE temp153.
    INSERT `                "properties": {` INTO TABLE temp153.
    INSERT `                    "myFirstElement": {` INTO TABLE temp153.
    INSERT `                        "title": "First Element",` INTO TABLE temp153.
    INSERT `                        "description": "This is the first element",` INTO TABLE temp153.
    INSERT `                        "type": "string",` INTO TABLE temp153.
    INSERT `                        "minLength": 4` INTO TABLE temp153.
    INSERT `                    }, ` INTO TABLE temp153.
    INSERT `                    "mySecondElement": {` INTO TABLE temp153.
    INSERT `                        "title": "Second Element",` INTO TABLE temp153.
    INSERT `                        "description": "This is the second element",` INTO TABLE temp153.
    INSERT `                        "type": "integer",` INTO TABLE temp153.
    INSERT `                        "minimum": -2147483648,` INTO TABLE temp153.
    INSERT `                        "maximum": 2147483647` INTO TABLE temp153.
    INSERT `                    } ` INTO TABLE temp153.
    INSERT `                },` INTO TABLE temp153.
    INSERT `                "additionalProperties": false` INTO TABLE temp153.
    INSERT `            }` INTO TABLE temp153.
    INSERT `        }` INTO TABLE temp153.
    INSERT `    },` INTO TABLE temp153.
    INSERT `    "additionalProperties": false` INTO TABLE temp153.
    INSERT `}` INTO TABLE temp153.

    INSERT temp154 INTO TABLE temp153.

    exp_schema = temp153.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD structure_with_different_enum.
    DATA temp155 TYPE zcl_aff_test_types=>structure_with_different_enum.
    DATA test LIKE temp155.
    CLEAR temp155.

    test = temp155.
    test_generator->generate_type( test ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text( log                = log
                                                              exp_text           = zif_aff_log=>co_msg127
                                                              exp_component_name = `STRUCTURE_WITH_DIFFERENT_ENUM-ENUM_WITHOUT_ALL`
                                                              exp_type           = zif_aff_log=>c_message_type-warning ).
  ENDMETHOD.


  METHOD complex_type_with_enum.
    DATA temp156 TYPE zcl_aff_test_types=>ty_class_properties.
    DATA act_schema_co TYPE string_table.
    DATA temp157 TYPE string_table.
    DATA temp135 LIKE LINE OF temp157.
    DATA temp136 LIKE LINE OF temp157.
    DATA temp137 LIKE LINE OF temp157.
    DATA temp158 LIKE LINE OF temp157.
    DATA exp_schema LIKE temp157.
    CLEAR temp156.

    act_schema_co = test_generator->generate_type( temp156 ).

    CLEAR temp157.
    INSERT `{` INTO TABLE temp157.

    temp135 = |   "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp135 INTO TABLE temp157.

    temp136 = |   "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp136 INTO TABLE temp157.

    temp137 = |   "$id": "{ schema_id }",|.
    INSERT temp137 INTO TABLE temp157.
    INSERT `   "title": "Class Properties",` INTO TABLE temp157.
    INSERT `   "description": "Class properties",` INTO TABLE temp157.
    INSERT `   "type": "object",` INTO TABLE temp157.
    INSERT `   "properties": {` INTO TABLE temp157.
    INSERT `     "header": {` INTO TABLE temp157.
    INSERT `       "title": "Header",` INTO TABLE temp157.
    INSERT `       "description": "The header for an ABAP main object",` INTO TABLE temp157.
    INSERT `       "type": "object",` INTO TABLE temp157.
    INSERT `       "properties": {` INTO TABLE temp157.
    INSERT `         "description": {` INTO TABLE temp157.
    INSERT `           "title": "Description",` INTO TABLE temp157.
    INSERT `           "description": "Description of the ABAP object",` INTO TABLE temp157.
    INSERT `           "type": "string"` INTO TABLE temp157.
    INSERT `       },` INTO TABLE temp157.
    INSERT `       "originalLanguage": {` INTO TABLE temp157.
    INSERT `         "title": "Original Language",` INTO TABLE temp157.
    INSERT `         "description": "Original language of the ABAP object",` INTO TABLE temp157.
    INSERT `         "type": "string",` INTO TABLE temp157.
    INSERT `         "minLength": 2` INTO TABLE temp157.
    INSERT `         },` INTO TABLE temp157.
    INSERT `         "abapLanguageVersion": {` INTO TABLE temp157.
    INSERT `           "title": "ABAP Language Version",` INTO TABLE temp157.
    INSERT `           "description": "ABAP language version",` INTO TABLE temp157.
    INSERT `           "type": "string",` INTO TABLE temp157.
    INSERT `           "enum": [` INTO TABLE temp157.
    INSERT `             "standard",` INTO TABLE temp157.
    INSERT `             "cloudDevelopment"` INTO TABLE temp157.
    INSERT `           ],` INTO TABLE temp157.
    INSERT `           "enumTitles": [` INTO TABLE temp157.
    INSERT `             "Standard",` INTO TABLE temp157.
    INSERT `             "ABAP Cloud Development"` INTO TABLE temp157.
    INSERT `           ],` INTO TABLE temp157.
    INSERT `           "enumDescriptions": [` INTO TABLE temp157.
    INSERT `             "Standard",` INTO TABLE temp157.
    INSERT `             "ABAP cloud development"` INTO TABLE temp157.
    INSERT `           ],` INTO TABLE temp157.
    INSERT `           "default": "standard"` INTO TABLE temp157.
    INSERT `        }` INTO TABLE temp157.
    INSERT `       },` INTO TABLE temp157.
    INSERT `       "additionalProperties": false` INTO TABLE temp157.
    INSERT `     },` INTO TABLE temp157.
    INSERT `     "classCategory": {` INTO TABLE temp157.
    INSERT `       "title": "Class Category",` INTO TABLE temp157.
    INSERT `       "description": "Class category",` INTO TABLE temp157.
    INSERT `       "type": "string",` INTO TABLE temp157.
    INSERT `       "enum": [` INTO TABLE temp157.
    INSERT `         "general",` INTO TABLE temp157.
    INSERT `         "exitClass"` INTO TABLE temp157.
    INSERT `       ],` INTO TABLE temp157.
    INSERT `       "enumTitles": [ ` INTO TABLE temp157.
    INSERT `         "General",` INTO TABLE temp157.
    INSERT `         "Exit Class"` INTO TABLE temp157.
    INSERT `       ],` INTO TABLE temp157.
    INSERT `       "enumDescriptions": [ ` INTO TABLE temp157.
    INSERT `         "General",` INTO TABLE temp157.
    INSERT `         "Exit class"` INTO TABLE temp157.
    INSERT `       ],` INTO TABLE temp157.
    INSERT `       "default": "general"` INTO TABLE temp157.
    INSERT `     }` INTO TABLE temp157.
    INSERT `   },` INTO TABLE temp157.
    INSERT `    "additionalProperties": false` INTO TABLE temp157.
    INSERT `}` INTO TABLE temp157.

    INSERT temp158 INTO TABLE temp157.

    exp_schema = temp157.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD nested_nested_structure.
    DATA temp159 TYPE zcl_aff_test_types=>list.
    DATA act_schema_co TYPE string_table.
    DATA temp160 TYPE string_table.
    DATA temp138 LIKE LINE OF temp160.
    DATA temp139 LIKE LINE OF temp160.
    DATA temp140 LIKE LINE OF temp160.
    DATA temp161 LIKE LINE OF temp160.
    DATA exp_schema LIKE temp160.
    CLEAR temp159.

    act_schema_co = test_generator->generate_type( temp159 ).

    CLEAR temp160.
    INSERT `{` INTO TABLE temp160.

    temp138 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp138 INTO TABLE temp160.

    temp139 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp139 INTO TABLE temp160.

    temp140 = |    "$id": "{ schema_id }",|.
    INSERT temp140 INTO TABLE temp160.
    INSERT `    "title": "outerStructure", ` INTO TABLE temp160.
    INSERT `    "description": "ABAP Doc Comment TYPES list first level", ` INTO TABLE temp160.
    INSERT `    "type": "object", ` INTO TABLE temp160.
    INSERT `    "properties": { ` INTO TABLE temp160.
    INSERT `      "field1": { ` INTO TABLE temp160.
    INSERT `        "title": "Outer Element 1",  ` INTO TABLE temp160.
    INSERT `        "description": "ABAP Doc field1", ` INTO TABLE temp160.
    INSERT `        "type": "integer",` INTO TABLE temp160.
    INSERT `        "minimum": -2147483648, ` INTO TABLE temp160.
    INSERT `        "maximum": 2147483647 ` INTO TABLE temp160.
    INSERT `      }, ` INTO TABLE temp160.
    INSERT `      "field2": { ` INTO TABLE temp160.
    INSERT `         "title": "Outer Element 2", ` INTO TABLE temp160.
    INSERT `         "description": "ABAP Doc field2", ` INTO TABLE temp160.
    INSERT `         "type": "string", ` INTO TABLE temp160.
    INSERT `         "maxLength": 2 ` INTO TABLE temp160.
    INSERT `      }, ` INTO TABLE temp160.
    INSERT `      "list1": { ` INTO TABLE temp160.
    INSERT `         "title": "middleStructure", ` INTO TABLE temp160.
    INSERT `        "description": "ABAP Doc list second level", ` INTO TABLE temp160.
    INSERT `        "type": "object", ` INTO TABLE temp160.
    INSERT `        "properties": { ` INTO TABLE temp160.
    INSERT `          "elementOfList1": { ` INTO TABLE temp160.
    INSERT `             "title": "Middle Element", ` INTO TABLE temp160.
    INSERT `            "description": "ABAP Doc second level", ` INTO TABLE temp160.
    INSERT `            "type": "integer", ` INTO TABLE temp160.
    INSERT `            "minimum": -2147483648, ` INTO TABLE temp160.
    INSERT `            "maximum": 2147483647 ` INTO TABLE temp160.
    INSERT `          }, ` INTO TABLE temp160.
    INSERT `           "list2": { ` INTO TABLE temp160.
    INSERT `            "title": "innerStructure", ` INTO TABLE temp160.
    INSERT `            "description": "ABAP Doc third level", ` INTO TABLE temp160.
    INSERT `            "type": "object", ` INTO TABLE temp160.
    INSERT `            "properties": { ` INTO TABLE temp160.
    INSERT `              "elementOfList2": { ` INTO TABLE temp160.
    INSERT `                "title": "Inner Element", ` INTO TABLE temp160.
    INSERT `                "description": "ABAP Doc third level", ` INTO TABLE temp160.
    INSERT `                "type": "string" ` INTO TABLE temp160.
    INSERT `              } ` INTO TABLE temp160.
    INSERT `             }, ` INTO TABLE temp160.
    INSERT `            "additionalProperties": false, ` INTO TABLE temp160.
    INSERT `            "required": [ ` INTO TABLE temp160.
    INSERT `              "elementOfList2"` INTO TABLE temp160.
    INSERT `            ] ` INTO TABLE temp160.
    INSERT `          } ` INTO TABLE temp160.
    INSERT `        }, ` INTO TABLE temp160.
    INSERT `         "additionalProperties": false, ` INTO TABLE temp160.
    INSERT `         "required": [ ` INTO TABLE temp160.
    INSERT `           "elementOfList1" ` INTO TABLE temp160.
    INSERT `         ] ` INTO TABLE temp160.
    INSERT `      }, ` INTO TABLE temp160.
    INSERT `      "field3": { ` INTO TABLE temp160.
    INSERT `        "title": "Outer Element 3", ` INTO TABLE temp160.
    INSERT `         "description": "ABAP Doc field3",` INTO TABLE temp160.
    INSERT `        "type": "string", ` INTO TABLE temp160.
    INSERT `        "maxLength": 2 ` INTO TABLE temp160.
    INSERT `      } ` INTO TABLE temp160.
    INSERT `     }, ` INTO TABLE temp160.
    INSERT `    "additionalProperties": false, ` INTO TABLE temp160.
    INSERT `    "required": [` INTO TABLE temp160.
    INSERT `      "field2",` INTO TABLE temp160.
    INSERT `      "list1",` INTO TABLE temp160.
    INSERT `      "field3"` INTO TABLE temp160.
    INSERT `    ] ` INTO TABLE temp160.
    INSERT `  } ` INTO TABLE temp160.

    INSERT temp161 INTO TABLE temp160.

    exp_schema = temp160.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD nested_nested_simple.
    DATA temp162 TYPE zcl_aff_test_types=>nsimple.
    DATA act_schema_co TYPE string_table.
    DATA temp163 TYPE string_table.
    DATA temp164 LIKE LINE OF temp163.
    DATA exp_schema LIKE temp163.
    CLEAR temp162.

    act_schema_co = test_generator->generate_type( temp162 ).

    CLEAR temp163.
    INSERT ` {` INTO TABLE temp163.
    INSERT `   "$comment": "This file is autogenerated, do not edit manually, see https://github.com/SAP/abap-file-formats for more information.",` INTO TABLE temp163.
    INSERT `   "$schema": "https://json-schema.org/draft/2020-12/schema",` INTO TABLE temp163.
    INSERT `   "$id": "schema/id.json",` INTO TABLE temp163.
    INSERT `   "type": "object",` INTO TABLE temp163.
    INSERT `   "properties": {` INTO TABLE temp163.
    INSERT `     "list1": {` INTO TABLE temp163.
    INSERT `       "type": "object",` INTO TABLE temp163.
    INSERT `       "properties": {` INTO TABLE temp163.
    INSERT `         "element": {` INTO TABLE temp163.
    INSERT `           "title": "Inner Element",` INTO TABLE temp163.
    INSERT `           "description": "sdfsdf",` INTO TABLE temp163.
    INSERT `           "type": "string"` INTO TABLE temp163.
    INSERT `         }` INTO TABLE temp163.
    INSERT `       },` INTO TABLE temp163.
    INSERT `       "additionalProperties": false,` INTO TABLE temp163.
    INSERT `       "required": [` INTO TABLE temp163.
    INSERT `         "element"` INTO TABLE temp163.
    INSERT `       ]` INTO TABLE temp163.
    INSERT `     }` INTO TABLE temp163.
    INSERT `   },` INTO TABLE temp163.
    INSERT `   "additionalProperties": false` INTO TABLE temp163.
    INSERT ` }` INTO TABLE temp163.

    INSERT temp164 INTO TABLE temp163.

    exp_schema = temp163.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-error ).
  ENDMETHOD.

  METHOD table_in_nested_stru_with_ad.
    DATA temp165 TYPE zcl_aff_test_types=>outer_struc.
    DATA act_schema_co TYPE string_table.
    DATA temp166 TYPE string_table.
    DATA temp141 LIKE LINE OF temp166.
    DATA temp142 LIKE LINE OF temp166.
    DATA temp143 LIKE LINE OF temp166.
    DATA temp167 LIKE LINE OF temp166.
    DATA exp_schema LIKE temp166.
    CLEAR temp165.

    act_schema_co = test_generator->generate_type( temp165 ).

    CLEAR temp166.
    INSERT ` { ` INTO TABLE temp166.

    temp141 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp141 INTO TABLE temp166.

    temp142 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp142 INTO TABLE temp166.

    temp143 = |    "$id": "{ schema_id }",|.
    INSERT temp143 INTO TABLE temp166.
    INSERT `    "title": "outerStructure", ` INTO TABLE temp166.
    INSERT `    "description": "ABAP Doc Comment TYPES list first level", ` INTO TABLE temp166.
    INSERT `    "type": "object", ` INTO TABLE temp166.
    INSERT `    "properties": { ` INTO TABLE temp166.
    INSERT `      "field1": { ` INTO TABLE temp166.
    INSERT `        "title": "Outer Element1",  ` INTO TABLE temp166.
    INSERT `        "description": "ABAP Doc field1 first level", ` INTO TABLE temp166.
    INSERT `        "type": "integer",` INTO TABLE temp166.
    INSERT `        "minimum": -2147483648, ` INTO TABLE temp166.
    INSERT `        "maximum": 2147483647 ` INTO TABLE temp166.
    INSERT `      }, ` INTO TABLE temp166.
    INSERT `      "innerStruc": { ` INTO TABLE temp166.
    INSERT `         "title": "Inner Structure 1", ` INTO TABLE temp166.
    INSERT `         "description": "Inner structure", ` INTO TABLE temp166.
    INSERT `         "type": "object", ` INTO TABLE temp166.
    INSERT `         "properties": { ` INTO TABLE temp166.
    INSERT `            "elementOfInnerStruc": { ` INTO TABLE temp166.
    INSERT `              "title": "Inner Element", ` INTO TABLE temp166.
    INSERT `              "description": "ABAP Doc element second level", ` INTO TABLE temp166.
    INSERT `              "type": "integer",` INTO TABLE temp166.
    INSERT `              "minimum": -2147483648, ` INTO TABLE temp166.
    INSERT `              "maximum": 2147483647 ` INTO TABLE temp166.
    INSERT `             }, ` INTO TABLE temp166.
    INSERT `             "innerTableVar": { ` INTO TABLE temp166.
    INSERT `              "title": "inner Table", ` INTO TABLE temp166.
    INSERT `              "description": "ABAP Doc element second level", ` INTO TABLE temp166.
    INSERT `              "type": "array", ` INTO TABLE temp166.
    INSERT `                "items": { ` INTO TABLE temp166.
    INSERT `                 "type": "string" ` INTO TABLE temp166.
    INSERT `                } ` INTO TABLE temp166.
    INSERT `              } ` INTO TABLE temp166.
    INSERT `          }, ` INTO TABLE temp166.
    INSERT `          "additionalProperties": false, ` INTO TABLE temp166.
    INSERT `          "required": [` INTO TABLE temp166.
    INSERT `            "elementOfInnerStruc",` INTO TABLE temp166.
    INSERT `            "innerTableVar"` INTO TABLE temp166.
    INSERT `          ] ` INTO TABLE temp166.
    INSERT `      }, ` INTO TABLE temp166.
    INSERT `      "field2": { ` INTO TABLE temp166.
    INSERT `        "title": "Outer Element2", ` INTO TABLE temp166.
    INSERT `        "description": "ABAP Doc field2 first level",` INTO TABLE temp166.
    INSERT `        "type": "string", ` INTO TABLE temp166.
    INSERT `        "maxLength": 2 ` INTO TABLE temp166.
    INSERT `      } ` INTO TABLE temp166.
    INSERT `    }, ` INTO TABLE temp166.
    INSERT `    "additionalProperties": false, ` INTO TABLE temp166.
    INSERT `    "required": [` INTO TABLE temp166.
    INSERT `      "field2"` INTO TABLE temp166.
    INSERT `    ] ` INTO TABLE temp166.
    INSERT `  } ` INTO TABLE temp166.

    INSERT temp167 INTO TABLE temp166.

    exp_schema = temp166.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD nestes_table_with_ad.
    DATA temp168 TYPE zcl_aff_test_types=>first_table.
    DATA act_schema_co TYPE string_table.
    DATA temp169 TYPE string_table.
    DATA temp144 LIKE LINE OF temp169.
    DATA temp145 LIKE LINE OF temp169.
    DATA temp146 LIKE LINE OF temp169.
    DATA temp170 LIKE LINE OF temp169.
    DATA exp_schema LIKE temp169.
    CLEAR temp168.

    act_schema_co = test_generator->generate_type( temp168 ).

    CLEAR temp169.
    INSERT ` { ` INTO TABLE temp169.

    temp144 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp144 INTO TABLE temp169.

    temp145 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp145 INTO TABLE temp169.

    temp146 = |    "$id": "{ schema_id }",|.
    INSERT temp146 INTO TABLE temp169.
    INSERT `    "title": "Outer Table", ` INTO TABLE temp169.
    INSERT `    "description": "This is the outer table", ` INTO TABLE temp169.
    INSERT `    "type": "array", ` INTO TABLE temp169.
    INSERT `    "items": { ` INTO TABLE temp169.
    INSERT `      "title": "Inner Table", ` INTO TABLE temp169.
    INSERT `      "description": "This is the inner Table", ` INTO TABLE temp169.
    INSERT `      "type": "array", ` INTO TABLE temp169.
    INSERT `      "items": { ` INTO TABLE temp169.
    INSERT `        "type": "string" ` INTO TABLE temp169.
    INSERT `      } ` INTO TABLE temp169.
    INSERT `    } ` INTO TABLE temp169.
    INSERT `  } ` INTO TABLE temp169.

    INSERT temp170 INTO TABLE temp169.

    exp_schema = temp169.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD structure_with_wrong_enum_link.
    DATA temp171 TYPE zcl_aff_test_types=>structure_with_wrong_link.
    DATA act_schema_co TYPE string_table.
    DATA temp172 TYPE string_table.
    DATA temp147 LIKE LINE OF temp172.
    DATA temp148 LIKE LINE OF temp172.
    DATA temp149 LIKE LINE OF temp172.
    DATA temp173 LIKE LINE OF temp172.
    DATA exp_schema LIKE temp172.
    CLEAR temp171.

    act_schema_co = test_generator->generate_type( temp171 ).

    CLEAR temp172.
    INSERT ` { ` INTO TABLE temp172.

    temp147 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp147 INTO TABLE temp172.

    temp148 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp148 INTO TABLE temp172.

    temp149 = |    "$id": "{ schema_id }",|.
    INSERT temp149 INTO TABLE temp172.
    INSERT `    "title": "Structure with Wrong Link", ` INTO TABLE temp172.
    INSERT `    "description": "This is a structure with wrong enum_values link", ` INTO TABLE temp172.
    INSERT `    "type": "object", ` INTO TABLE temp172.
    INSERT `    "properties": { ` INTO TABLE temp172.
    INSERT `      "elementOne": { ` INTO TABLE temp172.
    INSERT `        "title": "First Element",  ` INTO TABLE temp172.
    INSERT `        "description": "First element", ` INTO TABLE temp172.
    INSERT `        "type": "string"` INTO TABLE temp172.
    INSERT `      }, ` INTO TABLE temp172.
    INSERT `      "elementTwo": { ` INTO TABLE temp172.
    INSERT `        "title": "Second Element",  ` INTO TABLE temp172.
    INSERT `        "description": "Second element", ` INTO TABLE temp172.
    INSERT `        "type": "string",` INTO TABLE temp172.
    INSERT `        "maxLength": 2, ` INTO TABLE temp172.
    INSERT `        "pattern": "^[0-9]+$" ` INTO TABLE temp172.
    INSERT `      } ` INTO TABLE temp172.
    INSERT `    }, ` INTO TABLE temp172.
    INSERT `    "additionalProperties": false ` INTO TABLE temp172.
    INSERT `  } ` INTO TABLE temp172.

    INSERT temp173 INTO TABLE temp172.

    exp_schema = temp172.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = 'Constant ZCL_AFF_TEST_TYPES=>ENUM_VALUES_WRONG given in ABAP Doc link doesn''t exist'
      exp_type           = zif_aff_log=>c_message_type-warning
      exp_component_name = `STRUCTURE_WITH_WRONG_LINK-ELEMENT_TWO` ).
  ENDMETHOD.


  METHOD structure_with_table.
    DATA temp174 TYPE zcl_aff_test_types=>structure_with_doc_outside.
    DATA act_schema_co TYPE string_table.
    DATA temp175 TYPE string_table.
    DATA temp150 LIKE LINE OF temp175.
    DATA temp151 LIKE LINE OF temp175.
    DATA temp152 LIKE LINE OF temp175.
    DATA temp176 LIKE LINE OF temp175.
    DATA exp_schema LIKE temp175.
    CLEAR temp174.

    act_schema_co = test_generator->generate_type( temp174 ).

    CLEAR temp175.
    INSERT `{ ` INTO TABLE temp175.

    temp150 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp150 INTO TABLE temp175.

    temp151 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp151 INTO TABLE temp175.

    temp152 = |    "$id": "{ schema_id }",|.
    INSERT temp152 INTO TABLE temp175.
    INSERT `    "title": "Structure With ABAP Doc Outside",` INTO TABLE temp175.
    INSERT `    "description": "Structure with ABAP Doc outside",` INTO TABLE temp175.
    INSERT `    "type": "object",` INTO TABLE temp175.
    INSERT `    "properties": {` INTO TABLE temp175.
    INSERT `      "table1": {` INTO TABLE temp175.
    INSERT `        "title": "Table1",` INTO TABLE temp175.
    INSERT `        "description": "Table1",` INTO TABLE temp175.
    INSERT `        "type": "array",` INTO TABLE temp175.
    INSERT `        "items": {` INTO TABLE temp175.
    INSERT `          "type": "string"` INTO TABLE temp175.
    INSERT `        }` INTO TABLE temp175.
    INSERT `      },` INTO TABLE temp175.
    INSERT `      "structure": {` INTO TABLE temp175.
    INSERT `        "title": "Structure",` INTO TABLE temp175.
    INSERT `        "description": "Structure",` INTO TABLE temp175.
    INSERT `        "type": "object",` INTO TABLE temp175.
    INSERT `        "properties": {` INTO TABLE temp175.
    INSERT `          "field": {` INTO TABLE temp175.
    INSERT `            "title": "Field",` INTO TABLE temp175.
    INSERT `            "description": "Field",` INTO TABLE temp175.
    INSERT `            "type": "integer",` INTO TABLE temp175.
    INSERT `            "minimum": -2147483648,` INTO TABLE temp175.
    INSERT `            "maximum": 2147483647` INTO TABLE temp175.
    INSERT `          }` INTO TABLE temp175.
    INSERT `        },` INTO TABLE temp175.
    INSERT `        "additionalProperties": false` INTO TABLE temp175.
    INSERT `      },` INTO TABLE temp175.
    INSERT `      "table2": {` INTO TABLE temp175.
    INSERT `        "title": "Table2",` INTO TABLE temp175.
    INSERT `        "description": "Table2",` INTO TABLE temp175.
    INSERT `        "type": "array",` INTO TABLE temp175.
    INSERT `        "items": {` INTO TABLE temp175.
    INSERT `          "type": "string"` INTO TABLE temp175.
    INSERT `        }` INTO TABLE temp175.
    INSERT `      }` INTO TABLE temp175.
    INSERT `    },` INTO TABLE temp175.
    INSERT `    "additionalProperties": false, ` INTO TABLE temp175.
    INSERT `    "required": [ ` INTO TABLE temp175.
    INSERT `      "table1" ` INTO TABLE temp175.
    INSERT `    ] ` INTO TABLE temp175.
    INSERT `  }` INTO TABLE temp175.

    INSERT temp176 INTO TABLE temp175.

    exp_schema = temp175.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD numerical_text_field.
    DATA temp177 TYPE zcl_aff_test_types=>num_text.
    DATA act_schema_co TYPE string_table.
    DATA temp178 TYPE string_table.
    DATA temp153 LIKE LINE OF temp178.
    DATA temp154 LIKE LINE OF temp178.
    DATA temp155 LIKE LINE OF temp178.
    DATA temp179 LIKE LINE OF temp178.
    DATA exp_schema LIKE temp178.
    CLEAR temp177.

    act_schema_co = test_generator->generate_type( temp177 ).

    CLEAR temp178.
    INSERT `{` INTO TABLE temp178.

    temp153 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp153 INTO TABLE temp178.

    temp154 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp154 INTO TABLE temp178.

    temp155 = |    "$id": "{ schema_id }",|.
    INSERT temp155 INTO TABLE temp178.
    INSERT `    "title": "Numerical Text Field",` INTO TABLE temp178.
    INSERT `    "description": "A numerical text field of length 4",` INTO TABLE temp178.
    INSERT `    "type": "string",` INTO TABLE temp178.
    INSERT `    "maxLength": 4, ` INTO TABLE temp178.
    INSERT `    "pattern": "^[0-9]+$"` INTO TABLE temp178.
    INSERT `}` INTO TABLE temp178.

    INSERT temp179 INTO TABLE temp178.

    exp_schema = temp178.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD structure_with_numbers.
    DATA temp180 TYPE zcl_aff_test_types=>structure_with_numbers.
    DATA act_schema_co TYPE string_table.
    DATA temp181 TYPE string_table.
    DATA temp156 LIKE LINE OF temp181.
    DATA temp157 LIKE LINE OF temp181.
    DATA temp158 LIKE LINE OF temp181.
    DATA temp182 LIKE LINE OF temp181.
    DATA exp_schema LIKE temp181.
    CLEAR temp180.

    act_schema_co = test_generator->generate_type( temp180 ).

    CLEAR temp181.
    INSERT `{ ` INTO TABLE temp181.

    temp156 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp156 INTO TABLE temp181.

    temp157 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp157 INTO TABLE temp181.

    temp158 = |    "$id": "{ schema_id }",|.
    INSERT temp158 INTO TABLE temp181.
    INSERT `    "title": "Structure With Number Types",` INTO TABLE temp181.
    INSERT `    "description": "This is a structure with different number types",` INTO TABLE temp181.
    INSERT `    "type": "object",` INTO TABLE temp181.
    INSERT `    "properties": {` INTO TABLE temp181.
    INSERT `      "integer": {` INTO TABLE temp181.
    INSERT `        "title": "Integer With Maximum",` INTO TABLE temp181.
    INSERT `        "description": "Integer with maximum",` INTO TABLE temp181.
    INSERT `        "type": "integer",` INTO TABLE temp181.
    INSERT `        "minimum":-2147483648 ,` INTO TABLE temp181.
    INSERT `        "maximum":10` INTO TABLE temp181.
    INSERT `      },` INTO TABLE temp181.
    INSERT `      "float": {` INTO TABLE temp181.
    INSERT `        "title": "Float With Minimum And Exclusive Maximum",` INTO TABLE temp181.
    INSERT `        "description": "Float with minimum and exclusive maximum",` INTO TABLE temp181.
    INSERT `        "type": "number",` INTO TABLE temp181.
    INSERT `        "minimum": -0.42,` INTO TABLE temp181.
    INSERT `        "exclusiveMaximum": 100.9` INTO TABLE temp181.
    INSERT `      },` INTO TABLE temp181.
    INSERT `      "integerWithMultiple": {` INTO TABLE temp181.
    INSERT `        "title": "Integer With Given Multiple",` INTO TABLE temp181.
    INSERT `        "description": "Integer with given multiple",` INTO TABLE temp181.
    INSERT `        "type": "integer",` INTO TABLE temp181.
    INSERT `        "exclusiveMinimum": 0,` INTO TABLE temp181.
    INSERT `        "maximum": 99999,` INTO TABLE temp181.
    INSERT `        "multipleOf": 1` INTO TABLE temp181.
    INSERT `      },` INTO TABLE temp181.
    INSERT `      "packedWithoutMultiple": {` INTO TABLE temp181.
    INSERT `        "title": "Packed Number With No Given Multiple",` INTO TABLE temp181.
    INSERT `        "description": "Packed number with no given multiple",` INTO TABLE temp181.
    INSERT `        "type": "number",` INTO TABLE temp181.
    INSERT `        "exclusiveMinimum": 0,` INTO TABLE temp181.
    INSERT `        "maximum": 999999.9` INTO TABLE temp181.
    INSERT `      },` INTO TABLE temp181.
    INSERT `      "integerOut": {` INTO TABLE temp181.
    INSERT `        "title": "Integer Defined Outside",` INTO TABLE temp181.
    INSERT `        "description": "Integer defined outside and ABAP Doc number annotation outside",` INTO TABLE temp181.
    INSERT `        "type": "integer",` INTO TABLE temp181.
    INSERT `        "minimum": -25,` INTO TABLE temp181.
    INSERT `        "maximum": 2147483647` INTO TABLE temp181.
    INSERT `      },` INTO TABLE temp181.
    INSERT `      "integerOutWithDoc": {` INTO TABLE temp181.
    INSERT `        "title": "Integer Defined Outside",` INTO TABLE temp181.
    INSERT `        "description": "Integer defined outside but with ABAP Doc number annotation here",` INTO TABLE temp181.
    INSERT `        "type": "integer",` INTO TABLE temp181.
    INSERT `        "minimum": -2147483648,` INTO TABLE temp181.
    INSERT `        "maximum": 42 ` INTO TABLE temp181.
    INSERT `      }` INTO TABLE temp181.
    INSERT `    },` INTO TABLE temp181.
    INSERT `    "additionalProperties": false ` INTO TABLE temp181.
    INSERT `  }` INTO TABLE temp181.

    INSERT temp182 INTO TABLE temp181.

    exp_schema = temp181.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD structure_different_default.
    DATA temp183 TYPE zcl_aff_test_types=>structure_different_default.
    DATA act_schema_co TYPE string_table.
    DATA temp184 TYPE string_table.
    DATA temp159 LIKE LINE OF temp184.
    DATA temp160 LIKE LINE OF temp184.
    DATA temp161 LIKE LINE OF temp184.
    DATA temp185 LIKE LINE OF temp184.
    DATA exp_schema LIKE temp184.
    CLEAR temp183.

    act_schema_co = test_generator->generate_type( temp183 ).

    CLEAR temp184.
    INSERT `    { ` INTO TABLE temp184.

    temp159 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp159 INTO TABLE temp184.

    temp160 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp160 INTO TABLE temp184.

    temp161 = |    "$id": "{ schema_id }",|.
    INSERT temp161 INTO TABLE temp184.
    INSERT `    "title": "Structure With Default", ` INTO TABLE temp184.
    INSERT `    "description": "Structure to test default checks in simple transformation", ` INTO TABLE temp184.
    INSERT `    "type": "object", ` INTO TABLE temp184.
    INSERT `    "properties": { ` INTO TABLE temp184.
    INSERT `      "fourByteInt": { ` INTO TABLE temp184.
    INSERT `        "title": "Four Byte Integer", ` INTO TABLE temp184.
    INSERT `        "description": "Four byte integer", ` INTO TABLE temp184.
    INSERT `        "type": "integer", ` INTO TABLE temp184.
    INSERT `        "minimum": -2147483648, ` INTO TABLE temp184.
    INSERT `        "maximum": 2147483647 , ` INTO TABLE temp184.
    INSERT `        "default": 5 ` INTO TABLE temp184.
    INSERT `      }, ` INTO TABLE temp184.
    INSERT `      "eightByteInt": { ` INTO TABLE temp184.
    INSERT `        "title": "Eight Byte Integer", ` INTO TABLE temp184.
    INSERT `        "description": "Eight byte integer", ` INTO TABLE temp184.
    INSERT `        "type": "integer", ` INTO TABLE temp184.
    INSERT `        "minimum": -9223372036854775808, ` INTO TABLE temp184.
    INSERT `        "maximum": 9223372036854775807 , ` INTO TABLE temp184.
    INSERT `        "default": 55 ` INTO TABLE temp184.
    INSERT `       }, ` INTO TABLE temp184.
    INSERT `      "binFloat": { ` INTO TABLE temp184.
    INSERT `        "title": "Binary Floating Point Number", ` INTO TABLE temp184.
    INSERT `        "description": "Binary floating point number", ` INTO TABLE temp184.
    INSERT `        "type": "number", ` INTO TABLE temp184.
    INSERT `        "minimum": -1.7976931348623157e308, ` INTO TABLE temp184.
    INSERT `        "maximum": 1.7976931348623157e308, ` INTO TABLE temp184.
    INSERT `        "default": 4.3 ` INTO TABLE temp184.
    INSERT `      }, ` INTO TABLE temp184.
    INSERT `      "byteLike": { ` INTO TABLE temp184.
    INSERT `        "title": "Byte Like", ` INTO TABLE temp184.
    INSERT `        "description": "Byte like", ` INTO TABLE temp184.
    INSERT `        "type": "string", ` INTO TABLE temp184.
    INSERT `        "maxLength": 4, ` INTO TABLE temp184.
    INSERT `        "default": "FFFF" ` INTO TABLE temp184.
    INSERT `      }, ` INTO TABLE temp184.
    INSERT `      "byteLike2": { ` INTO TABLE temp184.
    INSERT `        "title": "Byte Like2", ` INTO TABLE temp184.
    INSERT `        "description": "Byte like2", ` INTO TABLE temp184.
    INSERT `        "type": "string", ` INTO TABLE temp184.
    INSERT `        "default": "FF00FF"` INTO TABLE temp184.
    INSERT `       }, ` INTO TABLE temp184.
    INSERT `      "decimalFloat16": { ` INTO TABLE temp184.
    INSERT `        "title": "Decimal Floating Point Number", ` INTO TABLE temp184.
    INSERT `        "description": "Decimal floating point number with 16 places", ` INTO TABLE temp184.
    INSERT `        "type": "number", ` INTO TABLE temp184.
    INSERT `        "minimum": -9.999999999999999e384, ` INTO TABLE temp184.
    INSERT `        "maximum": 9.999999999999999e384, ` INTO TABLE temp184.
    INSERT `        "default": 25.26 ` INTO TABLE temp184.
    INSERT `      }, ` INTO TABLE temp184.
    INSERT `      "decimalFloat34": { ` INTO TABLE temp184.
    INSERT `        "title": "Decimal Floating Point Number", ` INTO TABLE temp184.
    INSERT `        "description": "Decimal floating point number with 34 places", ` INTO TABLE temp184.
    INSERT `        "type": "number", ` INTO TABLE temp184.
    INSERT `        "minimum": -9.999999999999999999999999999999999e6144, ` INTO TABLE temp184.
    INSERT `        "maximum": 9.999999999999999999999999999999999e6144, ` INTO TABLE temp184.
    INSERT `        "default": 123.05 ` INTO TABLE temp184.
    INSERT `      }, ` INTO TABLE temp184.
    INSERT `      "packedNumber": { ` INTO TABLE temp184.
    INSERT `        "title": "Packed Number", ` INTO TABLE temp184.
    INSERT `        "description": "Packed number", ` INTO TABLE temp184.
    INSERT `        "type": "number", ` INTO TABLE temp184.
    INSERT `        "minimum": -999.99, ` INTO TABLE temp184.
    INSERT `        "maximum": 999.99 , ` INTO TABLE temp184.
    INSERT `        "default": 123.45 ` INTO TABLE temp184.
    INSERT `      }, ` INTO TABLE temp184.
    INSERT `      "numericText": { ` INTO TABLE temp184.
    INSERT `        "title": "Numeric Text Field", ` INTO TABLE temp184.
    INSERT `        "description": "Numeric text field", ` INTO TABLE temp184.
    INSERT `        "type": "string", ` INTO TABLE temp184.
    INSERT `        "maxLength": 4, ` INTO TABLE temp184.
    INSERT `        "pattern": "^[0-9]+$", ` INTO TABLE temp184.
    INSERT `        "default": "1067" ` INTO TABLE temp184.
    INSERT `      }, ` INTO TABLE temp184.
    INSERT `      "characterText": { ` INTO TABLE temp184.
    INSERT `        "title": "Character Text", ` INTO TABLE temp184.
    INSERT `        "description": "Character text", ` INTO TABLE temp184.
    INSERT `        "type": "string", ` INTO TABLE temp184.
    INSERT `        "maxLength": 5, ` INTO TABLE temp184.
    INSERT `        "default": "abcde" ` INTO TABLE temp184.
    INSERT `      }, ` INTO TABLE temp184.
    INSERT `      "stringText": { ` INTO TABLE temp184.
    INSERT `        "title": "String Text", ` INTO TABLE temp184.
    INSERT `        "description": "String text", ` INTO TABLE temp184.
    INSERT `        "type": "string", ` INTO TABLE temp184.
    INSERT `        "default": "Default text" ` INTO TABLE temp184.
    INSERT `      }, ` INTO TABLE temp184.
    INSERT `      "dateField": { ` INTO TABLE temp184.
    INSERT `        "title": "Date", ` INTO TABLE temp184.
    INSERT `        "description": "Date", ` INTO TABLE temp184.
    INSERT `        "type": "string", ` INTO TABLE temp184.
    INSERT `        "format": "date-time", ` INTO TABLE temp184.
    INSERT `        "default": "1972-04-01" ` INTO TABLE temp184.
    INSERT `      }, ` INTO TABLE temp184.
    INSERT `      "timeField": { ` INTO TABLE temp184.
    INSERT `        "title": "Time", ` INTO TABLE temp184.
    INSERT `        "description": "Time", ` INTO TABLE temp184.
    INSERT `        "type": "string", ` INTO TABLE temp184.
    INSERT `        "format": "date-time", ` INTO TABLE temp184.
    INSERT `        "default": "20:15:00" ` INTO TABLE temp184.
    INSERT `      }, ` INTO TABLE temp184.
    INSERT `      "dateTimeField": { ` INTO TABLE temp184.
    INSERT `        "title": "Date Time", ` INTO TABLE temp184.
    INSERT `        "description": "Date time: No support", ` INTO TABLE temp184.
    INSERT `        "type": "string", ` INTO TABLE temp184.
    INSERT `        "format": "date-time" ` INTO TABLE temp184.
    INSERT `      }, ` INTO TABLE temp184.
    INSERT `      "boolTrue": { ` INTO TABLE temp184.
    INSERT `        "title": "Boolean", ` INTO TABLE temp184.
    INSERT `        "description": "Boolean with default abap_true", ` INTO TABLE temp184.
    INSERT `        "type": "boolean", ` INTO TABLE temp184.
    INSERT `        "default": true ` INTO TABLE temp184.
    INSERT `      }, ` INTO TABLE temp184.
    INSERT `      "boolFalse": { ` INTO TABLE temp184.
    INSERT `        "title": "Boolean", ` INTO TABLE temp184.
    INSERT `        "description": "Boolean with default abap_false", ` INTO TABLE temp184.
    INSERT `        "type": "boolean", ` INTO TABLE temp184.
    INSERT `        "default": false ` INTO TABLE temp184.
    INSERT `      }, ` INTO TABLE temp184.
    INSERT `      "enumType": { ` INTO TABLE temp184.
    INSERT `        "title": "Enum Type", ` INTO TABLE temp184.
    INSERT `        "description": "Enum type", ` INTO TABLE temp184.
    INSERT `        "type": "string", ` INTO TABLE temp184.
    INSERT `        "enum": [ ` INTO TABLE temp184.
    INSERT `          "general", ` INTO TABLE temp184.
    INSERT `          "exitClass" ` INTO TABLE temp184.
    INSERT `        ], ` INTO TABLE temp184.
    INSERT `        "enumTitles": [ ` INTO TABLE temp184.
    INSERT `          "General", ` INTO TABLE temp184.
    INSERT `          "Exit Class" ` INTO TABLE temp184.
    INSERT `        ], ` INTO TABLE temp184.
    INSERT `        "enumDescriptions": [ ` INTO TABLE temp184.
    INSERT `          "General", ` INTO TABLE temp184.
    INSERT `          "Exit class" ` INTO TABLE temp184.
    INSERT `        ], ` INTO TABLE temp184.
    INSERT `        "default": "exitClass" ` INTO TABLE temp184.
    INSERT `      } ` INTO TABLE temp184.
    INSERT `    }, ` INTO TABLE temp184.
    INSERT `    "additionalProperties": false ` INTO TABLE temp184.
    INSERT `  } ` INTO TABLE temp184.

    INSERT temp185 INTO TABLE temp184.

    exp_schema = temp184.
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Annotation $default for type UTCLONG is not supported`
      exp_component_name = `STRUCTURE_DIFFERENT_DEFAULT-DATE_TIME_FIELD`
      exp_type           = zif_aff_log=>c_message_type-warning ).
  ENDMETHOD.

  METHOD structure_with_default_problem.
    DATA temp186 TYPE zcl_aff_test_types=>structure_with_default_problem.
    DATA act_schema_co TYPE string_table.
    DATA temp187 TYPE string_table.
    DATA temp162 LIKE LINE OF temp187.
    DATA temp163 LIKE LINE OF temp187.
    DATA temp164 LIKE LINE OF temp187.
    DATA temp188 LIKE LINE OF temp187.
    DATA exp_schema LIKE temp187.
    CLEAR temp186.

    act_schema_co = test_generator->generate_type( temp186 ).

    CLEAR temp187.
    INSERT `    { ` INTO TABLE temp187.

    temp162 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp162 INTO TABLE temp187.

    temp163 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp163 INTO TABLE temp187.

    temp164 = |    "$id": "{ schema_id }",|.
    INSERT temp164 INTO TABLE temp187.
    INSERT `     "title": "Structure With Default",` INTO TABLE temp187.
    INSERT `     "description": "Structure with default",` INTO TABLE temp187.
    INSERT `     "type": "object",` INTO TABLE temp187.
    INSERT `     "properties": {` INTO TABLE temp187.
    INSERT `       "integer": {` INTO TABLE temp187.
    INSERT `         "title": "Integer",` INTO TABLE temp187.
    INSERT `         "description": "Integer",` INTO TABLE temp187.
    INSERT `         "type": "integer",` INTO TABLE temp187.
    INSERT `         "minimum": -2147483648,` INTO TABLE temp187.
    INSERT `         "maximum": 2147483647,` INTO TABLE temp187.
    INSERT `         "default": 5` INTO TABLE temp187.
    INSERT `       },` INTO TABLE temp187.
    INSERT `       "stringElement": {` INTO TABLE temp187.
    INSERT `         "title": "String Element",` INTO TABLE temp187.
    INSERT `         "description": "String element with default value",` INTO TABLE temp187.
    INSERT `         "type": "string",` INTO TABLE temp187.
    INSERT `         "default": "DefaultString"` INTO TABLE temp187.
    INSERT `       },` INTO TABLE temp187.
    INSERT `       "enumRequired": {` INTO TABLE temp187.
    INSERT `         "title": "Enum Value",` INTO TABLE temp187.
    INSERT `         "description": "Enum value with default",` INTO TABLE temp187.
    INSERT `         "type": "string",` INTO TABLE temp187.
    INSERT `         "enum": [` INTO TABLE temp187.
    INSERT `           "general",` INTO TABLE temp187.
    INSERT `           "exitClass"` INTO TABLE temp187.
    INSERT `         ],` INTO TABLE temp187.
    INSERT `         "enumTitles": [` INTO TABLE temp187.
    INSERT `           "General",` INTO TABLE temp187.
    INSERT `           "Exit Class"` INTO TABLE temp187.
    INSERT `         ],` INTO TABLE temp187.
    INSERT `         "enumDescriptions": [` INTO TABLE temp187.
    INSERT `           "General",` INTO TABLE temp187.
    INSERT `           "Exit class"` INTO TABLE temp187.
    INSERT `         ],` INTO TABLE temp187.
    INSERT `         "default": "exitClass"` INTO TABLE temp187.
    INSERT `       },` INTO TABLE temp187.
    INSERT `       "enumShowAlways": {` INTO TABLE temp187.
    INSERT `         "title": "Enum Value",` INTO TABLE temp187.
    INSERT `         "description": "Enum value with default",` INTO TABLE temp187.
    INSERT `         "type": "string",` INTO TABLE temp187.
    INSERT `         "enum": [` INTO TABLE temp187.
    INSERT `           "general",` INTO TABLE temp187.
    INSERT `           "exitClass"` INTO TABLE temp187.
    INSERT `         ],` INTO TABLE temp187.
    INSERT `         "enumTitles": [` INTO TABLE temp187.
    INSERT `           "General",` INTO TABLE temp187.
    INSERT `           "Exit Class"` INTO TABLE temp187.
    INSERT `         ],` INTO TABLE temp187.
    INSERT `         "enumDescriptions": [` INTO TABLE temp187.
    INSERT `           "General",` INTO TABLE temp187.
    INSERT `           "Exit class"` INTO TABLE temp187.
    INSERT `         ],` INTO TABLE temp187.
    INSERT `         "default": "exitClass"` INTO TABLE temp187.
    INSERT `       }` INTO TABLE temp187.
    INSERT `     },` INTO TABLE temp187.
    INSERT `     "additionalProperties": false,` INTO TABLE temp187.
    INSERT `     "required": [` INTO TABLE temp187.
    INSERT `       "integer",` INTO TABLE temp187.
    INSERT `       "enumRequired"` INTO TABLE temp187.
    INSERT `     ]` INTO TABLE temp187.
    INSERT `   }` INTO TABLE temp187.

    INSERT temp188 INTO TABLE temp187.

    exp_schema = temp187.
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text( log                = log
                                                              exp_text           = zif_aff_log=>co_msg126
                                                              exp_component_name = `STRUCTURE_WITH_DEFAULT_PROBLEM-INTEGER`
                                                              exp_type           = zif_aff_log=>c_message_type-warning ).
  ENDMETHOD.


  METHOD nested_struc_with_default.
    DATA temp189 TYPE zcl_aff_test_types=>nested_struc_with_default.
    DATA act_schema_co TYPE string_table.
    DATA temp190 TYPE string_table.
    DATA temp165 LIKE LINE OF temp190.
    DATA temp166 LIKE LINE OF temp190.
    DATA temp167 LIKE LINE OF temp190.
    DATA temp191 LIKE LINE OF temp190.
    DATA exp_schema LIKE temp190.
    CLEAR temp189.

    act_schema_co = test_generator->generate_type( temp189 ).

    CLEAR temp190.
    INSERT `    { ` INTO TABLE temp190.

    temp165 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp165 INTO TABLE temp190.

    temp166 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp166 INTO TABLE temp190.

    temp167 = |    "$id": "{ schema_id }",|.
    INSERT temp167 INTO TABLE temp190.
    INSERT `     "title": "Nested Structure", ` INTO TABLE temp190.
    INSERT `     "description": "Nested structure", ` INTO TABLE temp190.
    INSERT `     "type": "object", ` INTO TABLE temp190.
    INSERT `     "properties": { ` INTO TABLE temp190.
    INSERT `       "outerComponent": { ` INTO TABLE temp190.
    INSERT `         "title": "Outer Component", ` INTO TABLE temp190.
    INSERT `         "description": "Outer component", ` INTO TABLE temp190.
    INSERT `         "type": "integer", ` INTO TABLE temp190.
    INSERT `         "minimum": -2147483648, ` INTO TABLE temp190.
    INSERT `         "maximum": 2147483647 , ` INTO TABLE temp190.
    INSERT `         "default": 10 ` INTO TABLE temp190.
    INSERT `       }, ` INTO TABLE temp190.
    INSERT `       "middleStruc": { ` INTO TABLE temp190.
    INSERT `         "title": "Middle Structure", ` INTO TABLE temp190.
    INSERT `         "description": "Middle structure", ` INTO TABLE temp190.
    INSERT `         "type": "object", ` INTO TABLE temp190.
    INSERT `         "properties": { ` INTO TABLE temp190.
    INSERT `           "middleComponent": { ` INTO TABLE temp190.
    INSERT `             "title": "Middle Component", ` INTO TABLE temp190.
    INSERT `             "description": "Middle component", ` INTO TABLE temp190.
    INSERT `             "type": "string", ` INTO TABLE temp190.
    INSERT `             "maxLength": 4, ` INTO TABLE temp190.
    INSERT `             "default": "abcd" ` INTO TABLE temp190.
    INSERT `           }, ` INTO TABLE temp190.
    INSERT `           "innerStruc": { ` INTO TABLE temp190.
    INSERT `             "title": "Inner Structure", ` INTO TABLE temp190.
    INSERT `             "description": "Inner structure", ` INTO TABLE temp190.
    INSERT `             "type": "object", ` INTO TABLE temp190.
    INSERT `             "properties": { ` INTO TABLE temp190.
    INSERT `               "innerComponent": { ` INTO TABLE temp190.
    INSERT `                 "title": "Inner Component", ` INTO TABLE temp190.
    INSERT `                 "description": "Inner component", ` INTO TABLE temp190.
    INSERT `                 "type": "string", ` INTO TABLE temp190.
    INSERT `                 "default": "Default Value" ` INTO TABLE temp190.
    INSERT `               } ` INTO TABLE temp190.
    INSERT `             }, ` INTO TABLE temp190.
    INSERT `             "additionalProperties": false ` INTO TABLE temp190.
    INSERT `           } ` INTO TABLE temp190.
    INSERT `         }, ` INTO TABLE temp190.
    INSERT `         "additionalProperties": false ` INTO TABLE temp190.
    INSERT `       } ` INTO TABLE temp190.
    INSERT `     }, ` INTO TABLE temp190.
    INSERT `     "additionalProperties": false ` INTO TABLE temp190.
    INSERT `   } ` INTO TABLE temp190.

    INSERT temp191 INTO TABLE temp190.

    exp_schema = temp190.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD structure_with_wrong_default.
    DATA temp192 TYPE zcl_aff_test_types=>structure_with_wrong_default.
    DATA act_schema_co TYPE string_table.
    DATA temp193 TYPE string_table.
    DATA temp168 LIKE LINE OF temp193.
    DATA temp169 LIKE LINE OF temp193.
    DATA temp170 LIKE LINE OF temp193.
    DATA temp194 LIKE LINE OF temp193.
    DATA exp_schema LIKE temp193.
    CLEAR temp192.

    act_schema_co = test_generator->generate_type( temp192 ).

    CLEAR temp193.
    INSERT `   { ` INTO TABLE temp193.

    temp168 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp168 INTO TABLE temp193.

    temp169 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp169 INTO TABLE temp193.

    temp170 = |    "$id": "{ schema_id }",|.
    INSERT temp170 INTO TABLE temp193.
    INSERT `     "title": "Structure With Wrong Default", ` INTO TABLE temp193.
    INSERT `     "description": "Structure with wrong default", ` INTO TABLE temp193.
    INSERT `     "type": "object", ` INTO TABLE temp193.
    INSERT `     "properties": { ` INTO TABLE temp193.
    INSERT `       "elementOne": { ` INTO TABLE temp193.
    INSERT `         "title": "First Element",` INTO TABLE temp193.
    INSERT `         "description": "First element", ` INTO TABLE temp193.
    INSERT `         "type": "string", ` INTO TABLE temp193.
    INSERT `         "enum": [ ` INTO TABLE temp193.
    INSERT `           "general", ` INTO TABLE temp193.
    INSERT `           "classicBadi" ` INTO TABLE temp193.
    INSERT `         ], ` INTO TABLE temp193.
    INSERT `         "enumTitles": [ ` INTO TABLE temp193.
    INSERT `           "generalCategory", ` INTO TABLE temp193.
    INSERT `           "" ` INTO TABLE temp193.
    INSERT `         ], ` INTO TABLE temp193.
    INSERT `         "enumDescriptions": [ ` INTO TABLE temp193.
    INSERT `           "General interface", ` INTO TABLE temp193.
    INSERT `           "Interface definition of a classic BAdI" ` INTO TABLE temp193.
    INSERT `         ] ` INTO TABLE temp193.
    INSERT `       }, ` INTO TABLE temp193.
    INSERT `       "elementTwo": { ` INTO TABLE temp193.
    INSERT `         "title": "Second Element", ` INTO TABLE temp193.
    INSERT `         "description": "Second element", ` INTO TABLE temp193.
    INSERT `         "type": "string", ` INTO TABLE temp193.
    INSERT `         "enum": [ ` INTO TABLE temp193.
    INSERT `           "general", ` INTO TABLE temp193.
    INSERT `           "classicBadi" ` INTO TABLE temp193.
    INSERT `         ], ` INTO TABLE temp193.
    INSERT `         "enumTitles": [ ` INTO TABLE temp193.
    INSERT `           "generalCategory", ` INTO TABLE temp193.
    INSERT `           "" ` INTO TABLE temp193.
    INSERT `         ], ` INTO TABLE temp193.
    INSERT `         "enumDescriptions": [ ` INTO TABLE temp193.
    INSERT `           "General interface", ` INTO TABLE temp193.
    INSERT `           "Interface definition of a classic BAdI" ` INTO TABLE temp193.
    INSERT `         ] ` INTO TABLE temp193.
    INSERT `       } ` INTO TABLE temp193.
    INSERT `     }, ` INTO TABLE temp193.
    INSERT `     "additionalProperties": false ` INTO TABLE temp193.
    INSERT `   } ` INTO TABLE temp193.

    INSERT temp194 INTO TABLE temp193.

    exp_schema = temp193.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text( log                = log
                                                              exp_text           = 'Component WRONG_COMPONENT of constant ENUM_VALUES in ABAP Doc link doesn''t exist'
                                                              exp_type           = zif_aff_log=>c_message_type-warning
                                                              exp_component_name = `STRUCTURE_WITH_WRONG_DEFAULT-ELEMENT_ONE` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text( log                = log
                                                              exp_text           = `Title is missing`
                                                              exp_type           = zif_aff_log=>c_message_type-info
                                                              exp_component_name = `ENUM_VALUES-CLASSIC_BADI` ).
  ENDMETHOD.


  METHOD element_with_callbackclas.
    DATA temp195 TYPE string_table.
    DATA temp197 TYPE zcl_aff_test_types=>simple_callback.
    DATA act_schema TYPE string_table.
    DATA temp198 TYPE string_table.
    DATA temp171 LIKE LINE OF temp198.
    DATA temp172 LIKE LINE OF temp198.
    DATA temp173 LIKE LINE OF temp198.
    DATA temp199 LIKE LINE OF temp198.
    DATA exp_schema LIKE temp198.
    CLEAR temp195.
    INSERT `"title": "myStringName",` INTO TABLE temp195.
    INSERT `"description": "This is a String",` INTO TABLE temp195.
    INSERT `"type": "string",` INTO TABLE temp195.
    INSERT `"maxLength": 3` INTO TABLE temp195.
    zcl_aff_test_types=>subschema = temp195.


    CLEAR temp197.

    act_schema = test_generator->generate_type( temp197 ).

    CLEAR temp198.
    INSERT `{` INTO TABLE temp198.

    temp171 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp171 INTO TABLE temp198.

    temp172 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp172 INTO TABLE temp198.

    temp173 = |    "$id": "{ schema_id }",|.
    INSERT temp173 INTO TABLE temp198.
    INSERT `    "title": "myStringName",` INTO TABLE temp198.
    INSERT `    "description": "This is a String",` INTO TABLE temp198.
    INSERT `    "type": "string",` INTO TABLE temp198.
    INSERT `    "maxLength": 3` INTO TABLE temp198.
    INSERT `}` INTO TABLE temp198.

    INSERT temp199 INTO TABLE temp198.

    exp_schema = temp198.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD simple_table_with_callbackclas.
    DATA temp200 TYPE string_table.
    DATA temp202 TYPE zcl_aff_test_types=>table_callback.
    DATA act_schema TYPE string_table.
    DATA temp203 TYPE string_table.
    DATA temp174 LIKE LINE OF temp203.
    DATA temp175 LIKE LINE OF temp203.
    DATA temp176 LIKE LINE OF temp203.
    DATA temp204 LIKE LINE OF temp203.
    DATA exp_schema LIKE temp203.
    CLEAR temp200.
    INSERT `"title": "my_table",` INTO TABLE temp200.
    INSERT `"description": "A standard table of strings",` INTO TABLE temp200.
    INSERT `"type": "array",` INTO TABLE temp200.
    INSERT `"items": {` INTO TABLE temp200.
    INSERT `  "title": "myStringName",` INTO TABLE temp200.
    INSERT `  "description": "This is a String",` INTO TABLE temp200.
    INSERT `  "type": "string",` INTO TABLE temp200.
    INSERT `  "maxLength": 3` INTO TABLE temp200.
    INSERT `}` INTO TABLE temp200.
    zcl_aff_test_types=>subschema = temp200.


    CLEAR temp202.

    act_schema = test_generator->generate_type( temp202 ).

    CLEAR temp203.
    INSERT `{` INTO TABLE temp203.

    temp174 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp174 INTO TABLE temp203.

    temp175 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp175 INTO TABLE temp203.

    temp176 = |    "$id": "{ schema_id }",|.
    INSERT temp176 INTO TABLE temp203.
    INSERT `    "title": "my_table",` INTO TABLE temp203.
    INSERT `    "description": "A standard table of strings",` INTO TABLE temp203.
    INSERT `    "type": "array",` INTO TABLE temp203.
    INSERT `    "items": {` INTO TABLE temp203.
    INSERT `        "title": "myStringName",` INTO TABLE temp203.
    INSERT `        "description": "This is a String",` INTO TABLE temp203.
    INSERT `        "type": "string",` INTO TABLE temp203.
    INSERT `        "maxLength": 3` INTO TABLE temp203.
    INSERT `    }` INTO TABLE temp203.
    INSERT `}` INTO TABLE temp203.

    INSERT temp204 INTO TABLE temp203.

    exp_schema = temp203.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD table_with_call_of_struc.
    DATA temp205 TYPE string_table.
    DATA temp207 TYPE zcl_aff_test_types=>table_callback.
    DATA act_schema TYPE string_table.
    DATA temp208 TYPE string_table.
    DATA temp177 LIKE LINE OF temp208.
    DATA temp178 LIKE LINE OF temp208.
    DATA temp179 LIKE LINE OF temp208.
    DATA temp209 LIKE LINE OF temp208.
    DATA exp_schema LIKE temp208.
    CLEAR temp205.
    INSERT `"title": "my_table_callback",` INTO TABLE temp205.
    INSERT `"description": "A standard table of my_structure",` INTO TABLE temp205.
    INSERT `"type": "array",` INTO TABLE temp205.
    INSERT `"items": {` INTO TABLE temp205.
    INSERT `  "title": "mySimpleStructureWithFallback",` INTO TABLE temp205.
    INSERT `  "description": "This is a simple structure",` INTO TABLE temp205.
    INSERT `  "type": "object",` INTO TABLE temp205.
    INSERT `  "properties": {` INTO TABLE temp205.
    INSERT `    "myFirstElement": {` INTO TABLE temp205.
    INSERT `    "title": "myStringName",` INTO TABLE temp205.
    INSERT `    "description": "This is a String",` INTO TABLE temp205.
    INSERT `    "type": "string",` INTO TABLE temp205.
    INSERT `    "minLength": 2` INTO TABLE temp205.
    INSERT `  },` INTO TABLE temp205.
    INSERT `  "mySecondElement": {` INTO TABLE temp205.
    INSERT `    "title": "mySecondElement",` INTO TABLE temp205.
    INSERT `    "description": "This is the second element",` INTO TABLE temp205.
    INSERT `    "type": "integer",` INTO TABLE temp205.
    INSERT `    "minimum": -2147483648,` INTO TABLE temp205.
    INSERT `    "maximum": 2147483647` INTO TABLE temp205.
    INSERT `    }` INTO TABLE temp205.
    INSERT `  },` INTO TABLE temp205.
    INSERT `  "additionalProperties": false` INTO TABLE temp205.
    INSERT `}` INTO TABLE temp205.
    zcl_aff_test_types=>subschema = temp205.


    CLEAR temp207.

    act_schema = test_generator->generate_type( temp207 ).

    CLEAR temp208.
    INSERT `{` INTO TABLE temp208.

    temp177 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp177 INTO TABLE temp208.

    temp178 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp178 INTO TABLE temp208.

    temp179 = |    "$id": "{ schema_id }",|.
    INSERT temp179 INTO TABLE temp208.
    INSERT `    "title": "my_table_callback",` INTO TABLE temp208.
    INSERT `    "description": "A standard table of my_structure",` INTO TABLE temp208.
    INSERT `    "type": "array",` INTO TABLE temp208.
    INSERT `    "items": {` INTO TABLE temp208.
    INSERT `        "title": "mySimpleStructureWithFallback",` INTO TABLE temp208.
    INSERT `        "description": "This is a simple structure",` INTO TABLE temp208.
    INSERT `        "type": "object",` INTO TABLE temp208.
    INSERT `        "properties": {` INTO TABLE temp208.
    INSERT `            "myFirstElement": {` INTO TABLE temp208.
    INSERT `                "title": "myStringName",` INTO TABLE temp208.
    INSERT `                "description": "This is a String",` INTO TABLE temp208.
    INSERT `                "type": "string",` INTO TABLE temp208.
    INSERT `                "minLength": 2` INTO TABLE temp208.
    INSERT `            },` INTO TABLE temp208.
    INSERT `            "mySecondElement": {` INTO TABLE temp208.
    INSERT `                "title": "mySecondElement",` INTO TABLE temp208.
    INSERT `                "description": "This is the second element",` INTO TABLE temp208.
    INSERT `                "type": "integer",` INTO TABLE temp208.
    INSERT `                "minimum": -2147483648,` INTO TABLE temp208.
    INSERT `                "maximum": 2147483647` INTO TABLE temp208.
    INSERT `            }` INTO TABLE temp208.
    INSERT `        },` INTO TABLE temp208.
    INSERT `        "additionalProperties": false` INTO TABLE temp208.
    INSERT `    }` INTO TABLE temp208.
    INSERT `}` INTO TABLE temp208.

    INSERT temp209 INTO TABLE temp208.

    exp_schema = temp208.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD nested_table_with_callback.
    DATA temp210 TYPE string_table.
    DATA temp212 TYPE zcl_aff_test_types=>table_call_of_table.
    DATA act_schema_co TYPE string_table.
    DATA temp213 TYPE string_table.
    DATA temp180 LIKE LINE OF temp213.
    DATA temp214 LIKE LINE OF temp213.
    DATA exp_schema LIKE temp213.
    CLEAR temp210.
    INSERT `"title": "my_table_of_table_callback", ` INTO TABLE temp210.
    INSERT `"description": "A standard table of my_table", ` INTO TABLE temp210.
    INSERT `"type": "array", ` INTO TABLE temp210.
    INSERT `"items": { ` INTO TABLE temp210.
    INSERT `  "title": "nestedTable", ` INTO TABLE temp210.
    INSERT `  "description": "This is the inner Table", ` INTO TABLE temp210.
    INSERT `  "type": "array", ` INTO TABLE temp210.
    INSERT `  "items": { ` INTO TABLE temp210.
    INSERT `    "title": "string", ` INTO TABLE temp210.
    INSERT `    "description": "string", ` INTO TABLE temp210.
    INSERT `    "type": "string" ` INTO TABLE temp210.
    INSERT `    } ` INTO TABLE temp210.
    INSERT `  } ` INTO TABLE temp210.
    zcl_aff_test_types=>subschema = temp210.

    CLEAR temp212.

    act_schema_co = test_generator->generate_type( temp212 ).

    CLEAR temp213.
    INSERT ` { ` INTO TABLE temp213.

    temp180 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp180 INTO TABLE temp213.
    INSERT `    "$schema": "https://json-schema.org/draft/2020-12/schema", ` INTO TABLE temp213.
    INSERT `    "$id": "schema/id.json", ` INTO TABLE temp213.
    INSERT `    "title": "my_table_of_table_callback", ` INTO TABLE temp213.
    INSERT `    "description": "A standard table of my_table", ` INTO TABLE temp213.
    INSERT `    "type": "array", ` INTO TABLE temp213.
    INSERT `    "items": { ` INTO TABLE temp213.
    INSERT `      "title": "nestedTable", ` INTO TABLE temp213.
    INSERT `      "description": "This is the inner Table", ` INTO TABLE temp213.
    INSERT `      "type": "array", ` INTO TABLE temp213.
    INSERT `      "items": { ` INTO TABLE temp213.
    INSERT `        "title": "string", ` INTO TABLE temp213.
    INSERT `        "description": "string", ` INTO TABLE temp213.
    INSERT `        "type": "string" ` INTO TABLE temp213.
    INSERT `      } ` INTO TABLE temp213.
    INSERT `    } ` INTO TABLE temp213.
    INSERT `  } ` INTO TABLE temp213.

    INSERT temp214 INTO TABLE temp213.

    exp_schema = temp213.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD table_of_struc_with_callback.
    DATA temp215 TYPE string_table.
    DATA temp217 TYPE zcl_aff_test_types=>table_of_struc_with_callback.
    DATA act_schema TYPE string_table.
    DATA temp218 TYPE string_table.
    DATA temp181 LIKE LINE OF temp218.
    DATA temp182 LIKE LINE OF temp218.
    DATA temp183 LIKE LINE OF temp218.
    DATA temp219 LIKE LINE OF temp218.
    DATA exp_schema LIKE temp218.
    CLEAR temp215.
    INSERT `"title": "myStructureFall",` INTO TABLE temp215.
    INSERT `"description": "myStructure",` INTO TABLE temp215.
    INSERT `"type": "object",` INTO TABLE temp215.
    INSERT `"properties": {` INTO TABLE temp215.
    INSERT `  "myElement": {` INTO TABLE temp215.
    INSERT `    "title": "myElement",` INTO TABLE temp215.
    INSERT `    "description": "myElement",` INTO TABLE temp215.
    INSERT `    "type": "string"` INTO TABLE temp215.
    INSERT `  }` INTO TABLE temp215.
    INSERT `}` INTO TABLE temp215.
    zcl_aff_test_types=>subschema = temp215.


    CLEAR temp217.

    act_schema = test_generator->generate_type( temp217 ).

    CLEAR temp218.
    INSERT `{` INTO TABLE temp218.

    temp181 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp181 INTO TABLE temp218.

    temp182 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp182 INTO TABLE temp218.

    temp183 = |    "$id": "{ schema_id }",|.
    INSERT temp183 INTO TABLE temp218.
    INSERT `    "title": "my_table",` INTO TABLE temp218.
    INSERT `    "description": "A standard table of my_structure_with_callback",` INTO TABLE temp218.
    INSERT `    "type": "array",` INTO TABLE temp218.
    INSERT `    "items": {` INTO TABLE temp218.
    INSERT `        "title": "myStructureFall",` INTO TABLE temp218.
    INSERT `        "description": "myStructure",` INTO TABLE temp218.
    INSERT `        "type": "object",` INTO TABLE temp218.
    INSERT `        "properties": {` INTO TABLE temp218.
    INSERT `            "myElement": {` INTO TABLE temp218.
    INSERT `                "title": "myElement",` INTO TABLE temp218.
    INSERT `                "description": "myElement",` INTO TABLE temp218.
    INSERT `                "type": "string"` INTO TABLE temp218.
    INSERT `            }` INTO TABLE temp218.
    INSERT `        }` INTO TABLE temp218.
    INSERT `    }` INTO TABLE temp218.
    INSERT `}` INTO TABLE temp218.

    INSERT temp219 INTO TABLE temp218.

    exp_schema = temp218.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD struct_with_table_callback.
    DATA temp220 TYPE string_table.
    DATA temp222 TYPE zcl_aff_test_types=>struc_of_table_with_callback.
    DATA act_schema TYPE string_table.
    DATA temp223 TYPE string_table.
    DATA temp184 LIKE LINE OF temp223.
    DATA temp185 LIKE LINE OF temp223.
    DATA temp186 LIKE LINE OF temp223.
    DATA temp224 LIKE LINE OF temp223.
    DATA exp_schema LIKE temp223.
    CLEAR temp220.
    INSERT `"elementTableCallback": {` INTO TABLE temp220.
    INSERT `  "title": "myTableWithCallback",` INTO TABLE temp220.
    INSERT `  "description": "A standard table of strings",` INTO TABLE temp220.
    INSERT `  "type": "array",` INTO TABLE temp220.
    INSERT `  "items": {` INTO TABLE temp220.
    INSERT `    "title": "myStringName",` INTO TABLE temp220.
    INSERT `    "description": "This is a String",` INTO TABLE temp220.
    INSERT `    "type": "string",` INTO TABLE temp220.
    INSERT `    "maxLength": 3` INTO TABLE temp220.
    INSERT `  }` INTO TABLE temp220.
    INSERT `}` INTO TABLE temp220.
    zcl_aff_test_types=>subschema = temp220.


    CLEAR temp222.

    act_schema = test_generator->generate_type( temp222 ).

    CLEAR temp223.
    INSERT `{` INTO TABLE temp223.

    temp184 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp184 INTO TABLE temp223.

    temp185 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp185 INTO TABLE temp223.

    temp186 = |    "$id": "{ schema_id }",|.
    INSERT temp186 INTO TABLE temp223.
    INSERT `    "title": "mySimpleStructure",` INTO TABLE temp223.
    INSERT `    "description": "This is a simple structure",` INTO TABLE temp223.
    INSERT `    "type": "object",` INTO TABLE temp223.
    INSERT `    "properties": {` INTO TABLE temp223.
    INSERT `        "elementTableCallback": {` INTO TABLE temp223.
    INSERT `            "title": "myTableWithCallback",` INTO TABLE temp223.
    INSERT `            "description": "A standard table of strings",` INTO TABLE temp223.
    INSERT `            "type": "array",` INTO TABLE temp223.
    INSERT `            "items": {` INTO TABLE temp223.
    INSERT `                "title": "myStringName",` INTO TABLE temp223.
    INSERT `                "description": "This is a String",` INTO TABLE temp223.
    INSERT `                "type": "string",` INTO TABLE temp223.
    INSERT `                "maxLength": 3` INTO TABLE temp223.
    INSERT `            }` INTO TABLE temp223.
    INSERT `        },` INTO TABLE temp223.
    INSERT `        "mySecondElement": {` INTO TABLE temp223.
    INSERT `            "title": "Second Element",` INTO TABLE temp223.
    INSERT `            "description": "This is the second element",` INTO TABLE temp223.
    INSERT `            "type": "integer",` INTO TABLE temp223.
    INSERT `            "minimum": -2147483648,` INTO TABLE temp223.
    INSERT `            "maximum": 2147483647` INTO TABLE temp223.
    INSERT `        }` INTO TABLE temp223.
    INSERT `    },` INTO TABLE temp223.
    INSERT `    "additionalProperties": false,` INTO TABLE temp223.
    INSERT `    "required": [ ` INTO TABLE temp223.
    INSERT `     "elementTableCallback" ` INTO TABLE temp223.
    INSERT `  ]` INTO TABLE temp223.
    INSERT `}` INTO TABLE temp223.

    INSERT temp224 INTO TABLE temp223.

    exp_schema = temp223.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD struc_with_struc_callback.
    DATA temp225 TYPE string_table.
    DATA temp227 TYPE zcl_aff_test_types=>struc_in_struc_with_callback.
    DATA act_schema TYPE string_table.
    DATA temp228 TYPE string_table.
    DATA temp187 LIKE LINE OF temp228.
    DATA temp188 LIKE LINE OF temp228.
    DATA temp189 LIKE LINE OF temp228.
    DATA temp229 LIKE LINE OF temp228.
    DATA exp_schema LIKE temp228.
    CLEAR temp225.
    INSERT `"elementStructureCallback": {` INTO TABLE temp225.
    INSERT `  "title": "myStrucWithCallback",` INTO TABLE temp225.
    INSERT `  "description": "A simple structure",` INTO TABLE temp225.
    INSERT `  "type": "object",` INTO TABLE temp225.
    INSERT `  "properties": {` INTO TABLE temp225.
    INSERT `    "myElement": {` INTO TABLE temp225.
    INSERT `      "title": "element",` INTO TABLE temp225.
    INSERT `      "description": "This is a integer",` INTO TABLE temp225.
    INSERT `      "type": "integer",` INTO TABLE temp225.
    INSERT `      "minimum": -2147483648,` INTO TABLE temp225.
    INSERT `      "maximum": 2147483647` INTO TABLE temp225.
    INSERT `    }` INTO TABLE temp225.
    INSERT `  },` INTO TABLE temp225.
    INSERT `  "additionalProperties": false` INTO TABLE temp225.
    INSERT `}` INTO TABLE temp225.
    zcl_aff_test_types=>subschema = temp225.


    CLEAR temp227.

    act_schema = test_generator->generate_type( temp227 ).

    CLEAR temp228.
    INSERT `{` INTO TABLE temp228.

    temp187 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp187 INTO TABLE temp228.

    temp188 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp188 INTO TABLE temp228.

    temp189 = |    "$id": "{ schema_id }",|.
    INSERT temp189 INTO TABLE temp228.
    INSERT `    "title": "mySimpleStructure",` INTO TABLE temp228.
    INSERT `    "description": "This is a simple structure",` INTO TABLE temp228.
    INSERT `    "type": "object",` INTO TABLE temp228.
    INSERT `    "properties": {` INTO TABLE temp228.
    INSERT `        "myFirstElement": {` INTO TABLE temp228.
    INSERT `            "title": "First Element",` INTO TABLE temp228.
    INSERT `            "description": "This is the first element",` INTO TABLE temp228.
    INSERT `            "type": "string"` INTO TABLE temp228.
    INSERT `        },` INTO TABLE temp228.
    INSERT `        "elementStructureCallback": {` INTO TABLE temp228.
    INSERT `            "title": "myStrucWithCallback",` INTO TABLE temp228.
    INSERT `            "description": "A simple structure",` INTO TABLE temp228.
    INSERT `            "type": "object",` INTO TABLE temp228.
    INSERT `            "properties": {` INTO TABLE temp228.
    INSERT `                "myElement": {` INTO TABLE temp228.
    INSERT `                    "title": "element",` INTO TABLE temp228.
    INSERT `                    "description": "This is a integer",` INTO TABLE temp228.
    INSERT `                    "type": "integer",` INTO TABLE temp228.
    INSERT `                    "minimum": -2147483648,` INTO TABLE temp228.
    INSERT `                    "maximum": 2147483647` INTO TABLE temp228.
    INSERT `                }` INTO TABLE temp228.
    INSERT `            },` INTO TABLE temp228.
    INSERT `            "additionalProperties": false` INTO TABLE temp228.
    INSERT `         },` INTO TABLE temp228.
    INSERT `        "myThirdElement": {` INTO TABLE temp228.
    INSERT `            "title": "Third Element",` INTO TABLE temp228.
    INSERT `            "description": "This is the third element",` INTO TABLE temp228.
    INSERT `            "type": "integer",` INTO TABLE temp228.
    INSERT `            "minimum": -2147483648,` INTO TABLE temp228.
    INSERT `            "maximum": 2147483647` INTO TABLE temp228.
    INSERT `        }` INTO TABLE temp228.
    INSERT `    },` INTO TABLE temp228.
    INSERT `    "additionalProperties": false,` INTO TABLE temp228.
    INSERT `    "required": [ ` INTO TABLE temp228.
    INSERT `     "elementStructureCallback" ` INTO TABLE temp228.
    INSERT `  ]` INTO TABLE temp228.
    INSERT `}` INTO TABLE temp228.

    INSERT temp229 INTO TABLE temp228.

    exp_schema = temp228.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD element_in_structure_callback.
    DATA temp230 TYPE string_table.
    DATA temp232 TYPE zcl_aff_test_types=>structure_with_elem_callback.
    DATA act_schema TYPE string_table.
    DATA temp233 TYPE string_table.
    DATA temp190 LIKE LINE OF temp233.
    DATA temp191 LIKE LINE OF temp233.
    DATA temp192 LIKE LINE OF temp233.
    DATA temp234 LIKE LINE OF temp233.
    DATA exp_schema LIKE temp233.
    CLEAR temp230.
    INSERT `"elementCallback": {` INTO TABLE temp230.
    INSERT `  "title": "myStringName",` INTO TABLE temp230.
    INSERT `  "description": "This is a String",` INTO TABLE temp230.
    INSERT `  "type": "string",` INTO TABLE temp230.
    INSERT `  "minLength": 2` INTO TABLE temp230.
    INSERT `}` INTO TABLE temp230.
    zcl_aff_test_types=>subschema = temp230.


    CLEAR temp232.

    act_schema = test_generator->generate_type( temp232 ).

    CLEAR temp233.
    INSERT `{` INTO TABLE temp233.

    temp190 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp190 INTO TABLE temp233.

    temp191 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp191 INTO TABLE temp233.

    temp192 = |    "$id": "{ schema_id }",|.
    INSERT temp192 INTO TABLE temp233.
    INSERT `    "title": "Simple Structure",` INTO TABLE temp233.
    INSERT `    "description": "This is a simple structure",` INTO TABLE temp233.
    INSERT `    "type": "object",` INTO TABLE temp233.
    INSERT `    "properties": {` INTO TABLE temp233.
    INSERT `        "elementCallback": {` INTO TABLE temp233.
    INSERT `            "title": "myStringName",` INTO TABLE temp233.
    INSERT `            "description": "This is a String",` INTO TABLE temp233.
    INSERT `            "type": "string",` INTO TABLE temp233.
    INSERT `            "minLength": 2` INTO TABLE temp233.
    INSERT `        },` INTO TABLE temp233.
    INSERT `        "mySecondElement": {` INTO TABLE temp233.
    INSERT `            "title": "Second Element",` INTO TABLE temp233.
    INSERT `            "description": "This is the second element",` INTO TABLE temp233.
    INSERT `            "type": "integer",` INTO TABLE temp233.
    INSERT `            "minimum": -2147483648,` INTO TABLE temp233.
    INSERT `            "maximum": 2147483647` INTO TABLE temp233.
    INSERT `        }` INTO TABLE temp233.
    INSERT `    },` INTO TABLE temp233.
    INSERT `    "additionalProperties": false,` INTO TABLE temp233.
    INSERT `    "required": [` INTO TABLE temp233.
    INSERT `      "elementCallback"` INTO TABLE temp233.
    INSERT `    ]` INTO TABLE temp233.
    INSERT `}` INTO TABLE temp233.

    INSERT temp234 INTO TABLE temp233.

    exp_schema = temp233.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD structure_with_wrong_callback.
    DATA temp235 TYPE zcl_aff_test_types=>structure_with_wrong_callback.
    DATA act_schema TYPE string_table.
    DATA temp236 TYPE string_table.
    DATA temp193 LIKE LINE OF temp236.
    DATA temp194 LIKE LINE OF temp236.
    DATA temp195 LIKE LINE OF temp236.
    DATA temp237 LIKE LINE OF temp236.
    DATA exp_schema LIKE temp236.
    CLEAR temp235.

    act_schema = test_generator->generate_type( temp235 ).

    CLEAR temp236.
    INSERT `   { ` INTO TABLE temp236.

    temp193 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp193 INTO TABLE temp236.

    temp194 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp194 INTO TABLE temp236.

    temp195 = |    "$id": "{ schema_id }",|.
    INSERT temp195 INTO TABLE temp236.
    INSERT `     "title": "Structure With Wrong Callback", ` INTO TABLE temp236.
    INSERT `     "description": "Structure with wrong callback", ` INTO TABLE temp236.
    INSERT `     "type": "object", ` INTO TABLE temp236.
    INSERT `     "properties": { ` INTO TABLE temp236.
    INSERT `       "myFirstElement": { ` INTO TABLE temp236.
    INSERT `         "title": "First Element", ` INTO TABLE temp236.
    INSERT `         "description": "This is the first element", ` INTO TABLE temp236.
    INSERT `         "type": "string", ` INTO TABLE temp236.
    INSERT `         "minLength": 2 ` INTO TABLE temp236.
    INSERT `       }, ` INTO TABLE temp236.
    INSERT `       "mySecondElement": { ` INTO TABLE temp236.
    INSERT `         "title": "Second Element",` INTO TABLE temp236.
    INSERT `         "description": "This is the second element",` INTO TABLE temp236.
    INSERT `         "type": "integer", ` INTO TABLE temp236.
    INSERT `         "minimum": -2147483648, ` INTO TABLE temp236.
    INSERT `         "maximum": 4 ` INTO TABLE temp236.
    INSERT `       } ` INTO TABLE temp236.
    INSERT `     }, ` INTO TABLE temp236.
    INSERT `     "additionalProperties": false, ` INTO TABLE temp236.
    INSERT `     "required": [` INTO TABLE temp236.
    INSERT `       "myFirstElement"` INTO TABLE temp236.
    INSERT `     ] ` INTO TABLE temp236.
    INSERT `   } ` INTO TABLE temp236.

    INSERT temp237 INTO TABLE temp236.

    exp_schema = temp236.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text( log                = log
                                                              exp_text           = zif_aff_log=>co_msg106
                                                              exp_component_name = `STRUCTURE_WITH_WRONG_CALLBACK-MY_FIRST_ELEMENT`
                                                              exp_type           = zif_aff_log=>c_message_type-warning ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = |Annotation { zcl_aff_abap_doc_parser=>abap_doc_annotation-callback_class } was used incorrectly|
      exp_component_name = `STRUCTURE_WITH_WRONG_CALLBACK-MY_SECOND_ELEMENT`
      exp_type           = zif_aff_log=>c_message_type-warning ).
  ENDMETHOD.

  METHOD structure_no_title_descr.
    DATA temp238 TYPE zcl_aff_test_types=>structure_no_title_descr.
    DATA act_schema TYPE string_table.
    DATA temp239 TYPE string_table.
    DATA temp196 LIKE LINE OF temp239.
    DATA temp197 LIKE LINE OF temp239.
    DATA temp198 LIKE LINE OF temp239.
    DATA temp240 LIKE LINE OF temp239.
    DATA exp_schema LIKE temp239.
    CLEAR temp238.

    act_schema = test_generator->generate_type( temp238 ).

    CLEAR temp239.
    INSERT `   { ` INTO TABLE temp239.

    temp196 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp196 INTO TABLE temp239.

    temp197 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp197 INTO TABLE temp239.

    temp198 = |    "$id": "{ schema_id }",|.
    INSERT temp198 INTO TABLE temp239.
    INSERT `    "type": "object", ` INTO TABLE temp239.
    INSERT `    "properties": { ` INTO TABLE temp239.
    INSERT `      "field1": { ` INTO TABLE temp239.
    INSERT `        "description": "Only description",` INTO TABLE temp239.
    INSERT `        "type": "string" ` INTO TABLE temp239.
    INSERT `    }, ` INTO TABLE temp239.
    INSERT `    "innerStruc": { ` INTO TABLE temp239.
    INSERT `      "title": "Only Title",` INTO TABLE temp239.
    INSERT `       "type": "object", ` INTO TABLE temp239.
    INSERT `       "properties": { ` INTO TABLE temp239.
    INSERT `         "innerField": { ` INTO TABLE temp239.
    INSERT `           "title": "Inner Field",` INTO TABLE temp239.
    INSERT `           "description": "Inner field",` INTO TABLE temp239.
    INSERT `           "type": "integer", ` INTO TABLE temp239.
    INSERT `           "minimum": -2147483648, ` INTO TABLE temp239.
    INSERT `           "maximum": 2147483647 ` INTO TABLE temp239.
    INSERT `         } ` INTO TABLE temp239.
    INSERT `       }, ` INTO TABLE temp239.
    INSERT `       "additionalProperties": false ` INTO TABLE temp239.
    INSERT `     }, ` INTO TABLE temp239.
    INSERT `     "innerTable": { ` INTO TABLE temp239.
    INSERT `       "type": "array", ` INTO TABLE temp239.
    INSERT `       "items": { ` INTO TABLE temp239.
    INSERT `         "type": "string" ` INTO TABLE temp239.
    INSERT `       } ` INTO TABLE temp239.
    INSERT `     } ` INTO TABLE temp239.
    INSERT `   }, ` INTO TABLE temp239.
    INSERT `   "additionalProperties": false ` INTO TABLE temp239.
    INSERT ` } ` INTO TABLE temp239.

    INSERT temp240 INTO TABLE temp239.

    exp_schema = temp239.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Title is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `STRUCTURE_NO_TITLE_DESCR` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Description is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `STRUCTURE_NO_TITLE_DESCR` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Title is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `STRUCTURE_NO_TITLE_DESCR-FIELD1` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Description is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `STRUCTURE_NO_TITLE_DESCR-INNER_STRUC` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Title is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `STRUCTURE_NO_TITLE_DESCR-INNER_TABLE` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Description is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `STRUCTURE_NO_TITLE_DESCR-INNER_TABLE` ).
  ENDMETHOD.

  METHOD element_no_title_descr.
    DATA temp241 TYPE zcl_aff_test_types=>element_no_title_descr.
    DATA act_schema TYPE string_table.
    DATA temp242 TYPE string_table.
    DATA temp199 LIKE LINE OF temp242.
    DATA temp200 LIKE LINE OF temp242.
    DATA temp201 LIKE LINE OF temp242.
    DATA temp243 LIKE LINE OF temp242.
    DATA exp_schema LIKE temp242.
    CLEAR temp241.

    act_schema = test_generator->generate_type( temp241 ).

    CLEAR temp242.
    INSERT `   { ` INTO TABLE temp242.

    temp199 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp199 INTO TABLE temp242.

    temp200 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp200 INTO TABLE temp242.

    temp201 = |    "$id": "{ schema_id }",|.
    INSERT temp201 INTO TABLE temp242.
    INSERT `    "type": "string" ` INTO TABLE temp242.
    INSERT ` } ` INTO TABLE temp242.

    INSERT temp243 INTO TABLE temp242.

    exp_schema = temp242.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Title is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `ELEMENT_NO_TITLE_DESCR` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Description is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `ELEMENT_NO_TITLE_DESCR` ).
  ENDMETHOD.

  METHOD table_no_title_descr.
    DATA temp244 TYPE zcl_aff_test_types=>table_no_title_descr.
    DATA act_schema TYPE string_table.
    DATA temp245 TYPE string_table.
    DATA temp202 LIKE LINE OF temp245.
    DATA temp203 LIKE LINE OF temp245.
    DATA temp204 LIKE LINE OF temp245.
    DATA temp246 LIKE LINE OF temp245.
    DATA exp_schema LIKE temp245.
    CLEAR temp244.

    act_schema = test_generator->generate_type( temp244 ).

    CLEAR temp245.
    INSERT `   { ` INTO TABLE temp245.

    temp202 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp202 INTO TABLE temp245.

    temp203 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp203 INTO TABLE temp245.

    temp204 = |    "$id": "{ schema_id }",|.
    INSERT temp204 INTO TABLE temp245.
    INSERT `    "type": "array", ` INTO TABLE temp245.
    INSERT `    "items": {` INTO TABLE temp245.
    INSERT `      "type": "string" ` INTO TABLE temp245.
    INSERT `    } ` INTO TABLE temp245.
    INSERT ` } ` INTO TABLE temp245.

    INSERT temp246 INTO TABLE temp245.

    exp_schema = temp245.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Title is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `TABLE_NO_TITLE_DESCR` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Description is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `TABLE_NO_TITLE_DESCR` ).
  ENDMETHOD.

  METHOD structure_with_include.
    DATA temp247 TYPE zcl_aff_test_types=>structure_with_include.
    DATA act_schema TYPE string_table.
    DATA temp248 TYPE string_table.
    DATA temp205 LIKE LINE OF temp248.
    DATA temp206 LIKE LINE OF temp248.
    DATA temp207 LIKE LINE OF temp248.
    DATA temp249 LIKE LINE OF temp248.
    DATA exp_schema LIKE temp248.
    CLEAR temp247.

    act_schema = test_generator->generate_type( temp247 ).

    CLEAR temp248.
    INSERT `   { ` INTO TABLE temp248.

    temp205 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp205 INTO TABLE temp248.

    temp206 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp206 INTO TABLE temp248.

    temp207 = |    "$id": "{ schema_id }",|.
    INSERT temp207 INTO TABLE temp248.
    INSERT `    "title": "Structure With Include", ` INTO TABLE temp248.
    INSERT `    "description": "Structure with include", ` INTO TABLE temp248.
    INSERT `    "type": "object", ` INTO TABLE temp248.
    INSERT `    "properties": { ` INTO TABLE temp248.
    INSERT `      "firstElement": { ` INTO TABLE temp248.
    INSERT `        "title": "First Element In Include",` INTO TABLE temp248.
    INSERT `        "type": "string" ` INTO TABLE temp248.
    INSERT `      }, ` INTO TABLE temp248.
    INSERT `      "secondElement": { ` INTO TABLE temp248.
    INSERT `        "title": "mySimpleStructure",` INTO TABLE temp248.
    INSERT `        "description": "This is a simple structure",` INTO TABLE temp248.
    INSERT `         "type": "object", ` INTO TABLE temp248.
    INSERT `         "properties": {` INTO TABLE temp248.
    INSERT `           "myFirstElement": {` INTO TABLE temp248.
    INSERT `              "title": "First Element",` INTO TABLE temp248.
    INSERT `              "description": "This is the first element",` INTO TABLE temp248.
    INSERT `              "type": "string",` INTO TABLE temp248.
    INSERT `              "minLength": 4` INTO TABLE temp248.
    INSERT `            },` INTO TABLE temp248.
    INSERT `            "mySecondElement": {` INTO TABLE temp248.
    INSERT `              "title": "Second Element",` INTO TABLE temp248.
    INSERT `              "description": "This is the second element",` INTO TABLE temp248.
    INSERT `              "type": "integer",` INTO TABLE temp248.
    INSERT `              "minimum": -2147483648,` INTO TABLE temp248.
    INSERT `              "maximum": 2147483647` INTO TABLE temp248.
    INSERT `            }` INTO TABLE temp248.
    INSERT `         },` INTO TABLE temp248.
    INSERT `         "additionalProperties": false` INTO TABLE temp248.
    INSERT `      },` INTO TABLE temp248.
    INSERT `      "thirdElement": {` INTO TABLE temp248.
    INSERT `        "title": "Third Element In Include",` INTO TABLE temp248.
    INSERT `        "description": "Third element in include",` INTO TABLE temp248.
    INSERT `        "type": "integer",` INTO TABLE temp248.
    INSERT `        "minimum": -2147483648,` INTO TABLE temp248.
    INSERT `        "maximum": 2147483647,` INTO TABLE temp248.
    INSERT `        "default": 10` INTO TABLE temp248.
    INSERT `      },` INTO TABLE temp248.
    INSERT `      "otherElement": { ` INTO TABLE temp248.
    INSERT `        "description": "Other element",` INTO TABLE temp248.
    INSERT `        "type": "integer",` INTO TABLE temp248.
    INSERT `        "minimum": -2147483648,` INTO TABLE temp248.
    INSERT `        "maximum": 2147483647` INTO TABLE temp248.
    INSERT `      },` INTO TABLE temp248.
    INSERT `      "otherStructure": { ` INTO TABLE temp248.
    INSERT `        "title": "Other structure",` INTO TABLE temp248.
    INSERT `        "description": "Other Structure",` INTO TABLE temp248.
    INSERT `        "type": "object", ` INTO TABLE temp248.
    INSERT `         "properties": {` INTO TABLE temp248.
    INSERT `           "myFirstElement": {` INTO TABLE temp248.
    INSERT `             "title": "First Element",` INTO TABLE temp248.
    INSERT `             "description": "This is the first element",` INTO TABLE temp248.
    INSERT `             "type": "string",` INTO TABLE temp248.
    INSERT `             "minLength": 4` INTO TABLE temp248.
    INSERT `           },` INTO TABLE temp248.
    INSERT `           "mySecondElement": {` INTO TABLE temp248.
    INSERT `             "title": "Second Element",` INTO TABLE temp248.
    INSERT `             "description": "This is the second element",` INTO TABLE temp248.
    INSERT `             "type": "integer",` INTO TABLE temp248.
    INSERT `             "minimum": -2147483648,` INTO TABLE temp248.
    INSERT `             "maximum": 2147483647` INTO TABLE temp248.
    INSERT `           }` INTO TABLE temp248.
    INSERT `         },` INTO TABLE temp248.
    INSERT `        "additionalProperties": false` INTO TABLE temp248.
    INSERT `      }` INTO TABLE temp248.
    INSERT `   }, ` INTO TABLE temp248.
    INSERT `   "additionalProperties": false, ` INTO TABLE temp248.
    INSERT `   "required": [` INTO TABLE temp248.
    INSERT `     "firstElement",` INTO TABLE temp248.
    INSERT `     "otherElement"` INTO TABLE temp248.
    INSERT `   ]` INTO TABLE temp248.
    INSERT ` } ` INTO TABLE temp248.

    INSERT temp249 INTO TABLE temp248.

    exp_schema = temp248.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Title is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `STRUCTURE_WITH_INCLUDE-OTHER_ELEMENT` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Description is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `TY_INCLUDE_TYPE-FIRST_ELEMENT` ).
  ENDMETHOD.

  METHOD description_too_long.
    DATA temp250 TYPE zcl_aff_test_types=>type_with_long_description.
    CLEAR temp250.
    test_generator->generate_type( temp250 ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = |Description exceeds { zcl_aff_writer_json_schema=>c_max_length_of_description } characters and might be too long|
      exp_component_name = `TYPE_WITH_LONG_DESCRIPTION`
      exp_type           = zif_aff_log=>c_message_type-warning ).

  ENDMETHOD.

  METHOD get_extrema_integer.
    DATA val TYPE i. "-2147483648 to +2147483647 for i
    DATA temp251 TYPE REF TO cl_abap_elemdescr.
    DATA max TYPE string.
    DATA min TYPE string.
    temp251 ?= cl_abap_typedescr=>describe_by_data( val ).


    cut->get_extrema(
      EXPORTING
        element_description = temp251
      IMPORTING
        max                 = max
        min                 = min ).
    cl_abap_unit_assert=>assert_equals( exp = `-2147483648` act = min ).
    cl_abap_unit_assert=>assert_equals( exp = `2147483647` act = max ).
  ENDMETHOD.

  METHOD get_extrema_decfloat16.
    DATA val TYPE decfloat16. "1E385(1E-16 - 1) to -1E-383, 0, +1E-383 to 1E385(1 - 1E-16) for decfloat16
    DATA temp252 TYPE REF TO cl_abap_elemdescr.
    DATA max TYPE string.
    DATA min TYPE string.
    temp252 ?= cl_abap_typedescr=>describe_by_data( val ).


    cut->get_extrema(
      EXPORTING
        element_description = temp252
      IMPORTING
        max                 = max
        min                 = min ).
    cl_abap_unit_assert=>assert_equals( exp = `-9.999999999999999e384` act = min ).
    cl_abap_unit_assert=>assert_equals( exp = `9.999999999999999e384` act = max ).
  ENDMETHOD.

  METHOD get_extrema_ftype.
    DATA val TYPE f. "2.2250738585072014E-308 to 1.7976931348623157E+308, positive as well as negative
    DATA temp253 TYPE REF TO cl_abap_elemdescr.
    DATA max TYPE string.
    DATA min TYPE string.
    temp253 ?= cl_abap_typedescr=>describe_by_data( val ).


    cut->get_extrema(
      EXPORTING
        element_description = temp253
      IMPORTING
        max                 = max
        min                 = min ).
    cl_abap_unit_assert=>assert_equals( exp = `-1.7976931348623157e308` act = min ).
    cl_abap_unit_assert=>assert_equals( exp = `1.7976931348623157e308` act = max ).
  ENDMETHOD.

  METHOD get_extrema_packed.
    DATA val TYPE p LENGTH 14 DECIMALS 2. "length multiplied by 2 minus 1 digits and can have a maximum of 14 decimal places
    DATA temp254 TYPE REF TO cl_abap_elemdescr.
    DATA max TYPE string.
    DATA min TYPE string.
    temp254 ?= cl_abap_typedescr=>describe_by_data( val ).


    cut->get_extrema(
      EXPORTING
        element_description = temp254
      IMPORTING
        max                 = max
        min                 = min ).
    cl_abap_unit_assert=>assert_equals( exp = `-9999999999999999999999999.99` act = min ).
    cl_abap_unit_assert=>assert_equals( exp = `9999999999999999999999999.99` act = max ).
  ENDMETHOD.

  METHOD get_extrema_integer1.
    DATA val TYPE int1.
    DATA temp255 TYPE REF TO cl_abap_elemdescr.
    DATA max TYPE string.
    DATA min TYPE string.
    temp255 ?= cl_abap_typedescr=>describe_by_data( val ).


    cut->get_extrema(
      EXPORTING
        element_description = temp255
      IMPORTING
        max                 = max
        min                 = min ).
    cl_abap_unit_assert=>assert_equals( exp = `0` act = min ).
    cl_abap_unit_assert=>assert_equals( exp = `255` act = max ).
  ENDMETHOD.

  METHOD calculate_max_length.
    DATA c_length_30 TYPE c LENGTH 30.
    DATA temp256 TYPE REF TO cl_abap_elemdescr.
    DATA max_length TYPE string.
    DATA c_length_60 TYPE c LENGTH 60.
    DATA temp257 TYPE REF TO cl_abap_elemdescr.
    DATA n_length_10 TYPE n LENGTH 10.
    DATA temp258 TYPE REF TO cl_abap_elemdescr.
    temp256 ?= cl_abap_typedescr=>describe_by_data( c_length_30 ).

    max_length = cut->get_max_length(
      element_description = temp256 ).
    cl_abap_unit_assert=>assert_equals( exp = 30 act = max_length ).



    temp257 ?= cl_abap_typedescr=>describe_by_data( c_length_60 ).
    max_length = cut->get_max_length(
      element_description = temp257 ).
    cl_abap_unit_assert=>assert_equals( exp = 60 act = max_length ).



    temp258 ?= cl_abap_typedescr=>describe_by_data( n_length_10 ).
    max_length = cut->get_max_length(
      element_description = temp258 ).
    cl_abap_unit_assert=>assert_equals( exp = 10 act = max_length ).
  ENDMETHOD.

  METHOD struc_with_own_enum_values.
    DATA temp259 TYPE zcl_aff_test_types=>struc_with_own_enum_values.
    DATA act_schema TYPE string_table.
    DATA temp260 TYPE string_table.
    DATA temp208 LIKE LINE OF temp260.
    DATA temp209 LIKE LINE OF temp260.
    DATA temp210 LIKE LINE OF temp260.
    DATA temp261 LIKE LINE OF temp260.
    DATA exp_schema LIKE temp260.
    CLEAR temp259.

    act_schema = test_generator->generate_type( temp259 ).

    CLEAR temp260.
    INSERT `   { ` INTO TABLE temp260.

    temp208 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    INSERT temp208 INTO TABLE temp260.

    temp209 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    INSERT temp209 INTO TABLE temp260.

    temp210 = |    "$id": "{ schema_id }",|.
    INSERT temp210 INTO TABLE temp260.
    INSERT `    "title": "Structure With Overwritten Enum Values", ` INTO TABLE temp260.
    INSERT `    "description": "Structure with overwritten enum values", ` INTO TABLE temp260.
    INSERT `    "type": "object", ` INTO TABLE temp260.
    INSERT `    "properties": { ` INTO TABLE temp260.
    INSERT `      "enumComponent": { ` INTO TABLE temp260.
    INSERT `        "title": "Enum Component",` INTO TABLE temp260.
    INSERT `        "description": "Enum component",` INTO TABLE temp260.
    INSERT `        "type": "string", ` INTO TABLE temp260.
    INSERT `         "enum": [ ` INTO TABLE temp260.
    INSERT `           "AAAA", ` INTO TABLE temp260.
    INSERT `           "BBBB" ` INTO TABLE temp260.
    INSERT `         ], ` INTO TABLE temp260.
    INSERT `         "enumTitles": [ ` INTO TABLE temp260.
    INSERT `           "Option 1", ` INTO TABLE temp260.
    INSERT `           "Option 2" ` INTO TABLE temp260.
    INSERT `         ], ` INTO TABLE temp260.
    INSERT `         "enumDescriptions": [ ` INTO TABLE temp260.
    INSERT `           "Option 1", ` INTO TABLE temp260.
    INSERT `           "Option 2" ` INTO TABLE temp260.
    INSERT `         ], ` INTO TABLE temp260.
    INSERT `         "default": "AAAA"` INTO TABLE temp260.
    INSERT `      } ` INTO TABLE temp260.
    INSERT `   }, ` INTO TABLE temp260.
    INSERT `   "additionalProperties": false ` INTO TABLE temp260.
    INSERT ` } ` INTO TABLE temp260.

    INSERT temp261 INTO TABLE temp260.

    exp_schema = temp260.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

ENDCLASS.
